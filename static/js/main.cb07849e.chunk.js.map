{"version":3,"sources":["components/assets/pugSusu.png","components/assets/pugEwtt.png","components/assets/pugAmmo.png","components/assets/pugUsdc.png","components/assets/pugBnb.png","components/assets/promoAbout.png","components/assets/gangster.png","components/assets/dbank.png","components/assets/logo.png","components/assets/pugFather.png","components/assets/gang-ewt.png","components/App.js","components/pages/Lottery.js","components/pages/About.js","components/NavBar.js","components/MApp.js","serviceWorker.js","index.js","components/assets/ammo.png","components/assets/ewt.png","components/assets/gngLotto.png"],"names":["module","exports","Home","Component","componentWillMount","loadBlockchainData","props","dispatch","window","ethereum","web3","Web3","eth","net","getId","netId","getBlockNumber","blockAc","console","log","getAccounts","accounts","index","length","getBalance","balance","setState","account","utils","fromWei","alert","ammoContract","Contract","Token","abi","networks","address","fake_ewt_contract","Ewt_Fake","methods","balanceOf","call","fake_ewt_clp","ewt_clp_wallet_balance","fake_ammo_contract","Ammo_Fake","fake_ammo_clp","ammo_clp_wallet_balance","masterChef","MasterChef","state","ammo_wallet_wei","ammoAddress","ammo_wallet_balance","getFeeAddress","feeAddress","userInfo","user_farm_0","user_farm_1","pendingSushi","pdt_rewards_0","pdt_rewards_1","amount","rewardDebt","depo_clp_ewt_amount","depo_clp_ammo_amount","containReward_0","containRewar_1","reward_farm_0","toFixed","reward_farm_1","farmContracts","ammo","masterChefAddress","feeAddres","reward_ewt_pdt_ammo","reward_ammo_pdt_ammo","deposit_ewt_clp","gas","BN","gasPrice","dep_amount","toWei","deposit","allow","fee","approve","send","from","location","reload","deposit_ammo_clp","transfer","withdraw_ewt_clp","e","maxAmount","withdraw","currentAmmoBalance","preventDefault","withdraw_ammo_clp","constructor","super","ChangeCLP_EWT_Amount","event","undefined","target","value","this","input_lp_ewt","ChangeCLP_AMMO_Amount","input_lp_ammo","pair","render","className","style","background","class","color","align","display","alignItems","justifyContent","role","height","width","src","pugEwtt","alt","onClick","placeholder","onChange","pugAmmo","pugUsdc","pugBnb","pugSusu","Date","endContest_0","dif","difDate","Math","round","openContest_0","Lottery","GetLotto_0","on","lottery","LotteryContract","winnings","winDisp_0","ticketsLength","leng","gLotto","allTickets","probability","pot","tickets","options","toString","gLotto_0","gLotto_0_probability","gLotto_0_allTickets","pot_0","Buy_gLotto_0","id","buyingAmount","buy","Withdraw_gLotto_0","contest_0_winner","resposta","ewt","size","percent","strokeWidth","strokeColor","trailColor","gangster","date","now","margin","gngLotto","About","promoAbout","NavBar","changePage","page","href","pug","rel","no-select","substr","App","React","path","exact","to","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":";mFAAAA,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,8nx+BCA3CD,EAAOC,QAAU,IAA0B,sC,0CCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,uC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,yUC2C3C,MAAMC,UAAaC,YACXC,qBAAsB,IAAD,kIACnB,EAAKC,mBAAmB,EAAKC,MAAMC,UADhB,6CAIrBF,mBAAmBE,GAAW,IAAD,mLACF,qBAApBC,OAAOC,SADe,wBAEzBC,EAAO,IAAIC,IAAKH,OAAOC,UAFE,SAGXC,EAAKE,IAAIC,IAAIC,QAHF,cAGzBC,EAHyB,gBAITL,EAAKE,IAAII,iBAJA,cAIzBC,EAJyB,OAM/BC,QAAQC,IAAIJ,GACZG,QAAQC,IAAR,iBAAsBF,IAPS,UAURP,EAAKE,IAAIQ,cAVD,QAY/B,IAFMC,EAVyB,OAW/BH,QAAQC,IAAI,mCACHG,EAAQ,EAAGA,EAAQD,EAASE,OAAQD,IAC3CJ,QAAQC,IAAIE,EAASC,IAbQ,GAe/BJ,QAAQC,IAAIE,GAEe,qBAAhBA,EAAS,GAjBW,kCAkBPX,EAAKE,IAAIY,WAAWH,EAAS,IAlBtB,QAkBvBI,EAlBuB,OAmB7B,EAAKC,SAAS,CACZC,QAASN,EAAS,GAClBI,QAASf,EAAKkB,MAAMC,QAAQJ,GAC5Bf,KAAMA,IAtBqB,wBAyB7BF,OAAOsB,MAAM,8BAzBgB,yBAmCvBC,EAAe,IAAIrB,EAAKE,IAAIoB,SAChCC,EAAMC,IACND,EAAME,SAASpB,GAAOqB,SAGlBC,EAAoB,IAAI3B,EAAKE,IAAIoB,SACrCM,EAASJ,IACTI,EAASH,SAASpB,GAAOqB,SA1CE,UA4CFC,EAAkBE,QAC1CC,UAAUnB,EAAS,IACnBoB,OA9C0B,eA4CvBC,EA5CuB,OA+CvBC,EAAyBjC,EAAKkB,MAAMC,QAAQa,GAE5CE,EAAqB,IAAIlC,EAAKE,IAAIoB,SACtCa,EAAUX,IACVW,EAAUV,SAASpB,GAAOqB,SAnDC,UAqDDQ,EAAmBL,QAC5CC,UAAUnB,EAAS,IACnBoB,OAvD0B,eAqDvBK,EArDuB,OAwDvBC,EAA0BrC,EAAKkB,MAAMC,QAAQiB,GAEnD5B,QAAQC,IAAIc,EAAME,SAASpB,GAAOqB,SAC5BY,EAAa,IAAItC,EAAKE,IAAIoB,SAC9BiB,EAAWf,IACXe,EAAWd,SAASpB,GAAOqB,SAE7BlB,QAAQC,IAAI8B,EAAWd,SAASpB,GAAOqB,SA/DV,UAgECL,EAAaQ,QACxCC,UAAU,EAAKU,MAAMvB,SACrBc,OAlE0B,eAgEvBU,EAhEuB,OAmEvBC,EAAcnB,EAAME,SAASpB,GAAOqB,QACpCiB,EAAsB3C,EAAKkB,MAAMC,QAAQsB,GApElB,UAsEJH,EAAWT,QAAQe,gBAAgBb,OAtE/B,eAsEvBc,EAtEuB,iBAwELP,EAAWT,QAChCiB,SAAS,EAAG,EAAKN,MAAMvB,SACvBc,OA1E0B,eAwEzBgB,EAxEyB,iBA2ELT,EAAWT,QAChCiB,SAAS,EAAG,EAAKN,MAAMvB,SACvBc,OA7E0B,eA2EzBiB,EA3EyB,iBA+EHV,EAAWT,QAClCoB,aAAa,EAAG,EAAKT,MAAMvB,SAC3Bc,OAjF0B,eA+EzBmB,EA/EyB,iBAkFHZ,EAAWT,QAClCoB,aAAa,EAAG,EAAKT,MAAMvB,SAC3Bc,OApF0B,QAkFzBoB,EAlFyB,OAsF7B3C,QAAQC,IAAIT,EAAKkB,MAAMC,QAAQ4B,EAAYK,SAC3C5C,QAAQC,IAAIT,EAAKkB,MAAMC,QAAQ4B,EAAYM,aAErCC,EAAsBtD,EAAKkB,MAAMC,QAAQ4B,EAAYK,QACrDG,EAAuBvD,EAAKkB,MAAMC,QAAQ6B,EAAYI,QAExDI,EAAkBxD,EAAKkB,MAAMC,QAAQ+B,GACrCO,EAAiBzD,EAAKkB,MAAMC,QAAQgC,GAEpCO,IAAkBF,GAAiBG,QAAQ,GAC3CC,IAAkBH,GAAgBE,QAAQ,GAE9CnD,QAAQC,IAAI,wBAINoD,EAAgB,CAAClC,EAAmBO,GAC1C1B,QAAQC,MACRD,QAAQC,IAAImD,GACZ,EAAK5C,SAAS,CAEZ8C,KAAMzC,EACNqB,YAAaA,EAEbJ,WAAYA,EACZyB,kBAAmBxB,EAAWd,SAASpB,GAAOqB,QAC9CsC,UAAWnB,EAEXgB,cAAeA,EAEfI,oBAAqBP,EACrBJ,oBAAqBA,EAErBY,qBAAsBN,EACtBL,qBAAsBA,EAGtBtB,uBAAwBA,EACxBI,wBAAyBA,EACzBM,oBAAqBA,EAGrB3C,KAAMA,EACNK,MAAOA,IAjIoB,mDAoI7BG,QAAQC,IAAI,QAAZ,MACAX,OAAOsB,MAAM,iDArIgB,gCAwI/BtB,OAAOsB,MAAM,2BAxIkB,6DA6I7B+C,gBAAgBf,GAAS,IAAD,qIACd,GAAVA,EADwB,iCAEA,EAAKZ,MAAMqB,cAAc,GAAGhC,QACnDC,UAAU,EAAKU,MAAMvB,SACrBc,OAJuB,iBAKpBqC,EAAM,IAAI,EAAK5B,MAAMxC,KAAKkB,MAAMmD,GAAG,WACnCC,EAAW,IAAI,EAAK9B,MAAMxC,KAAKkB,MAAMmD,GAAG,SAE9C7D,QAAQC,IAAI,eACN8D,EAAa,EAAK/B,MAAMxC,KAAKkB,MAAMsD,MAAMpB,GAEzCqB,EAAU,IAAI,EAAKjC,MAAMxC,KAAKkB,MAAMmD,GAAGE,GACvCG,EAAQD,EAAUL,EAAME,EAE9B9D,QAAQC,IAAIiE,GACZlE,QAAQC,IAAI,yBACZD,QAAQC,IAAI2C,GACNuB,EAAM,IAAI,EAAKnC,MAAMxC,KAAKkB,MAAMmD,GAAG,uBACzC7D,QAAQC,IAAR,eAAoBkE,IACU,cAA1B,EAAKnC,MAAMF,WAnBW,4CAqBG,EAAKE,MAAMF,WAAWT,QAC5Ce,gBACAb,OAvBmB,sBAwBtBvB,QAAQC,IAAIkE,GAxBU,UA0BA,EAAKnC,MAAMqB,cAAc,GAAGhC,QAC/C+C,QAAQ,EAAKpC,MAAMuB,kBAAmBW,GACtCG,KAAK,CAAEC,KAAM,EAAKtC,MAAMvB,UA5BL,gCAqChB,EAAKuB,MAAMF,WAAWT,QAAQ4C,QAAQ,EAAGA,GAASI,KAAK,CAC3DC,KAAM,EAAKtC,MAAMvB,QACjBmD,IAAKA,EACLE,SAAUA,IAxCU,QA0CtB9D,QAAQC,IAAI,wBACZX,OAAOiF,SAASC,SA3CM,mDA6CtBxE,QAAQC,IAAI,mBAAZ,MA7CsB,qFAoDxBwE,iBAAiB7B,GAAS,IAAD,uIACf,GAAVA,EADyB,iCAED,EAAKZ,MAAMqB,cAAc,GAAGhC,QACnDC,UAAU,EAAKU,MAAMvB,SACrBc,OAJwB,iBAKrBqC,EAAM,IAAI,EAAK5B,MAAMxC,KAAKkB,MAAMmD,GAAG,WACnCC,EAAW,IAAI,EAAK9B,MAAMxC,KAAKkB,MAAMmD,GAAG,SAE9C7D,QAAQC,IAAI,eACN8D,EAAa,EAAK/B,MAAMxC,KAAKkB,MAAMsD,MAAMpB,GAEzCqB,EAAU,IAAI,EAAKjC,MAAMxC,KAAKkB,MAAMmD,GAAGE,GACvCG,EAAQD,EAAUL,EAAME,EACxBK,EAAM,IAAI,EAAKnC,MAAMxC,KAAKkB,MAAMmD,GAAG,uBACzC7D,QAAQC,IAAIiE,GACZlE,QAAQC,IAAI,8BACZD,QAAQC,IAAI2C,GAEkB,cAA1B,EAAKZ,MAAMF,WAlBY,4CAoBE,EAAKE,MAAMF,WAAWT,QAC5Ce,gBACAb,OAtBoB,eAoBjBc,EApBiB,iBAuBD,EAAKL,MAAMqB,cAAc,GAAGhC,QAC/C+C,QAAQ,EAAKpC,MAAMuB,kBAAmBW,GACtCG,KAAK,CACJC,KAAM,EAAKtC,MAAMvB,UA1BE,gCA4BjB,EAAKuB,MAAMsB,KAAKjC,QAAQqD,SAASrC,EAAY8B,GAAKE,KAAK,CAC3DC,KAAM,EAAKtC,MAAMvB,QACjBmD,IAAKA,EACLE,SAAUA,IA/BW,eAkCvB9D,QAAQC,IAAI,iBAlCW,UAmCjB,EAAK+B,MAAMF,WAAWT,QAAQ4C,QAAQ,EAAGA,GAASI,KAAK,CAC3DC,KAAM,EAAKtC,MAAMvB,QACjBmD,IAAKA,EACLE,SAAUA,IAtCW,QAwCvB9D,QAAQC,IAAI,wBACZX,OAAOiF,SAASC,SAzCO,mDA2CvBxE,QAAQC,IAAI,mBAAZ,MA3CuB,qFAsDzB0E,iBAAiBC,GAAI,IAAD,gJACE,EAAK5C,MAAMF,WAAWT,QAC7CiB,SAAS,EAAG,EAAKN,MAAMvB,SACvBc,OAHqB,cAClBgB,EADkB,OAIlBsC,EAAY,EAAK7C,MAAMxC,KAAKkB,MAAMC,QAAQ4B,EAAYK,QACtDkC,EAAW,IAAI,EAAK9C,MAAMxC,KAAKkB,MAAMmD,GACzC,EAAK7B,MAAMxC,KAAKkB,MAAMsD,MAAMa,IAE9B7E,QAAQC,IAAI,0BACA,IAAI,EAAK+B,MAAMxC,KAAKkB,MAAMmD,GAAG,WACxB,IAAI,EAAK7B,MAAMxC,KAAKkB,MAAMmD,GAAG,UAExC3B,EAAc,EAAKF,MAAME,YAC/BlC,QAAQC,IAAIiC,GAbY,UAcS,EAAKF,MAAMsB,KAAKjC,QAC9CC,UAAU,EAAKU,MAAMvB,SACrBc,OAhBqB,WAclBwD,EAdkB,OAiBZ,IAAI,EAAK/C,MAAMxC,KAAKkB,MAAMmD,GAAG,uBAEzCe,EAAEI,iBAC4B,cAA1B,EAAKhD,MAAMF,WApBS,4CAsBK,EAAKE,MAAMF,WAAWT,QAC5Ce,gBACAb,OAxBiB,gCAiCd,EAAKS,MAAMF,WAAWT,QACzByD,SAAS,EAAGA,GACZT,KAAK,CAAEC,KAAM,EAAKtC,MAAMvB,UAnCP,QAoCpBT,QAAQC,IAAR,mBACc,EAAK+B,MAAMxC,KAAKkB,MAAMC,QAChCmE,GAFJ,oEAG+D,EAAK9C,MAAMxC,KAAKkB,MAAMC,QACjFoE,KAGJzF,OAAOiF,SAASC,SA3CI,mDA6CpBxE,QAAQC,IAAI,oBAAZ,MA7CoB,6DAkDpBgF,kBAAkBL,GAAI,IAAD,sJACC,EAAK5C,MAAMF,WAAWT,QAC7CiB,SAAS,EAAG,EAAKN,MAAMvB,SACvBc,OAHsB,cACnBiB,EADmB,OAInBqC,EAAY,EAAK7C,MAAMxC,KAAKkB,MAAMC,QAAQ6B,EAAYI,QACtDkC,EAAW,IAAI,EAAK9C,MAAMxC,KAAKkB,MAAMmD,GACzC,EAAK7B,MAAMxC,KAAKkB,MAAMsD,MAAMa,IAE9B7E,QAAQC,IAAI,0BACNiC,EAAc,EAAKF,MAAME,YACzB0B,EAAM,IAAI,EAAK5B,MAAMxC,KAAKkB,MAAMmD,GAAG,WACnCC,EAAW,IAAI,EAAK9B,MAAMxC,KAAKkB,MAAMmD,GAAG,UAC9C7D,QAAQC,IAAI,eACZD,QAAQC,IAAIiC,GACNiC,EAAM,IAAI,EAAKnC,MAAMxC,KAAKkB,MAAMmD,GAAG,uBAdhB,UAgBQ,EAAK7B,MAAMsB,KAAKjC,QAC9CC,UAAU,EAAKU,MAAMvB,SACrBc,OAlBsB,kBAoBzBqD,EAAEI,iBAC4B,cAA1B,EAAKhD,MAAMF,WArBU,4CAuBI,EAAKE,MAAMF,WAAWT,QAC5Ce,gBACAb,OAzBkB,eAuBfc,EAvBe,iBA0Bf,EAAKL,MAAMsB,KAAKjC,QAAQqD,SAASrC,EAAY8B,GAAKE,KAAK,CAC3DC,KAAM,EAAKtC,MAAMvB,QACjBmD,IAAKA,EACLE,SAAUA,IA7BS,yBAgCf,EAAK9B,MAAMF,WAAWT,QACzByD,SAAS,EAAGA,GACZT,KAAK,CAAEC,KAAM,EAAKtC,MAAMvB,UAlCN,QAmCrBnB,OAAOiF,SAASC,SAnCK,mDAqCrBxE,QAAQC,IAAI,oBAAZ,MArCqB,6DA4C3BiF,YAAY9F,GACV+F,MAAM/F,GADW,KAmCnBgG,qBAAwBC,IACtBrF,QAAQC,SAA0BqF,GAAtBD,EAAME,OAAOC,YACCF,GAAtBD,EAAME,OAAOC,MACfC,KAAKjF,SAAS,CAAEkF,aAAcD,KAAKzD,MAAMP,yBAEzCgE,KAAKjF,SAAS,CAAEkF,aAAcL,EAAME,OAAOC,SAxC5B,KA4CnBG,sBAAyBN,IAEvBrF,QAAQC,IAAIoF,EAAME,OAAOC,YACCF,GAAtBD,EAAME,OAAOC,MACfC,KAAKjF,SAAS,CAAEoF,cAAeH,KAAKzD,MAAMH,0BAE1C4D,KAAKjF,SAAS,CAAEoF,cAAeP,EAAME,OAAOC,SAhD9CC,KAAKzD,MAAQ,CAEXxC,KAAM,YACNsC,WAAY,KACZjC,MAAO,KACPwC,WAAY,KAEZ5B,QAAS,GACTF,QAAS,EAITkB,uBAAwB,EACxBgC,oBAAqB,EACrBX,oBAAqB,EACrB4C,aAAc,EAGd7D,wBAAyB,EACzB6B,qBAAsB,EACtBX,qBAAsB,EACtB6C,cAAe,EAGfvC,cAAe,GACfC,KAAM,KACNC,kBAAmB,KAGnBsC,KAAM,MA4BVC,SACE,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,kBACb,6BACA,yBAAKA,UAAU,OAAOC,MAAO,CAAEC,WAAY,UACzC,6BACA,6BACA,yBAAKC,MAAM,cACT,yBAAKA,MAAM,WACT,yBAAKA,MAAM,kBACT,yBAAKA,MAAM,eACT,0BAAMA,MAAM,SAAZ,iBACA,0BAAMA,MAAM,aACV,0BAAMC,MAAM,SAAZ,oJAMF,6BACA,6BACE,0BAAMD,MAAM,QAAQE,MAAM,SACxB,0BAAMD,MAAM,SACV,2BACE,uEAShB,6BACA,yBACED,MAAM,eACNF,MAAO,CACLK,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGlB,yBAAKL,MAAM,gBACT,yBAAKA,MAAM,sBAET,yBAAKA,MAAM,UAAUE,MAAM,QACzB,0BAAMF,MAAM,SACV,0BAAMC,MAAM,SAAZ,oBAEF,0BAAMD,MAAM,SACV,0BAAMC,MAAM,SACTV,KAAKzD,MAAMP,0BAKlB,yBAAKyE,MAAM,kBACT,yBAAKA,MAAM,2BACT,0BAAMM,KAAK,OAAOT,UAAU,aAC1B,yBAAKG,MAAM,OACT,yBAAKA,MAAM,6BACT,yBAAKA,MAAM,QACT,yBACEA,MAAM,sBACNF,MAAO,CAAES,OAAQ,OAAQC,MAAO,SAEhC,yBAAKC,IAAKC,IAASC,IAAI,WAG3B,8BACA,yBAAKX,MAAM,QAAQE,MAAM,SACvB,kCACG,0BAAMD,MAAM,SAAZ,aAGL,yBAAKD,MAAM,SACT,0BAAMA,MAAM,OACyB,GAAlCT,KAAKzD,MAAMyB,oBACR,QADH,WAEOgC,KAAKzD,MAAMyB,sBAErB,0BAAMyC,MAAM,eACyB,GAAlCT,KAAKzD,MAAMyB,oBACR,OADH,UAKL,yBAAKyC,MAAM,iBAAiBE,MAAM,SAChC,yBACEF,MAAM,mCACNY,QAAUlC,GAAMa,KAAKd,iBAAiBC,IAEtC,yBAAKsB,MAAM,WACT,0BACEC,MACoC,GAAlCV,KAAKzD,MAAMc,oBACP,QACA,QAJR,YASA,yBAAKoD,MAAM,eAIjB,yBAAKA,MAAM,gBAAgBE,MAAM,SAC/B,0BAAMF,MAAM,SAAZ,cACA,0BAAMA,MAAM,SACTT,KAAKzD,MAAMc,oBADd,eAMN,8BAIF,yBACEoD,MAAM,cACNF,MAAO,CACLK,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGlB,yBACEL,MAAM,sBACNF,MAAO,CAAEU,MAAO,QAEhB,2BACER,MAAM,cACNa,YAC6B,GAA3BtB,KAAKzD,MAAM0D,aACP,MACAD,KAAKzD,MAAM0D,aAEjBsB,SAAUvB,KAAKL,uBAEjB,0BAAMc,MAAM,gCAAZ,eAGA,yBACEA,MAAM,4BACNY,QAAUlC,GAAMa,KAAKL,qBAAqBR,IAF5C,UAUN,yBACEsB,MAAM,qCACNF,MAAO,CAAES,OAAQ,QAEjB,yBAAKP,MAAM,OACT,yBACEA,MAAM,mCACNY,QAAUlC,GACRa,KAAK9B,gBAAgB8B,KAAKzD,MAAM0D,eAGlC,yBAAKQ,MAAM,WACT,0BAAMC,MAAM,SAAZ,WACA,yBAAKD,MAAM,gBAOnB,0BAAMM,KAAK,OAAOT,UAAU,aAC1B,yBAAKG,MAAM,UAAUE,MAAM,QACzB,0BAAMF,MAAM,SACV,0BAAMC,MAAM,SAAZ,oBAEF,0BAAMD,MAAM,SACV,0BAAMC,MAAM,SACTV,KAAKzD,MAAMH,2BAKlB,yBAAKqE,MAAM,OACT,yBAAKA,MAAM,mBACT,yBAAKA,MAAM,QACT,yBACEA,MAAM,sBACNF,MAAO,CAAES,OAAQ,OAAQC,MAAO,SAEhC,yBAAKC,IAAKM,IAASJ,IAAI,WAG3B,8BACA,yBAAKX,MAAM,QAAQE,MAAM,SACvB,kCACG,0BAAMD,MAAM,SAAZ,cAGL,yBAAKD,MAAM,SACT,0BAAMA,MAAM,OAC0B,GAAnCT,KAAKzD,MAAM0B,qBACR,QADH,WAEO+B,KAAKzD,MAAM0B,uBAErB,0BAAMwC,MAAM,eAC0B,GAAnCT,KAAKzD,MAAM0B,qBACR,OADH,UAKL,yBAAKwC,MAAM,iBAAiBE,MAAM,SAChC,yBACEF,MAAM,mCACNY,QAAUlC,GAAMa,KAAKR,kBAAkBL,IAEvC,yBAAKsB,MAAM,WACT,0BACEC,MACqC,GAAnCV,KAAKzD,MAAMe,qBACP,QACA,QAJR,YASA,yBAAKmD,MAAM,eAIjB,yBAAKA,MAAM,gBAAgBE,MAAM,SAC/B,0BAAMF,MAAM,SAAZ,cACA,0BAAMA,MAAM,SACTT,KAAKzD,MAAMe,qBADd,gBAMN,8BAGF,yBACEmD,MAAM,cACNF,MAAO,CACLK,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGlB,yBAAKL,MAAM,sBAAsBF,MAAO,CAAEU,MAAO,QAC/C,2BACER,MAAM,cACNa,YAC8B,GAA5BtB,KAAKzD,MAAM4D,cACP,MACAH,KAAKzD,MAAM4D,cAEjBoB,SAAUvB,KAAKE,wBAEjB,0BAAMO,MAAM,gCAAZ,gBAGA,yBACEA,MAAM,4BACNY,QAAUlC,GAAMa,KAAKE,sBAAsBf,IAF7C,UAUN,yBAAKsB,MAAM,gBACT,yBAAKA,MAAM,sCACT,yBAAKA,MAAM,OACT,yBACEA,MAAM,mCACNY,QAAUlC,GACRa,KAAKhB,iBAAiBgB,KAAKzD,MAAM4D,gBAGnC,yBAAKM,MAAM,WACT,0BAAMC,MAAM,SAAZ,WACA,yBAAKD,MAAM,kBAUvB,0BAAMM,KAAK,OAAOT,UAAU,aAC1B,yBAAKG,MAAM,UAAUE,MAAM,QACzB,0BAAMF,MAAM,SACV,0BAAMC,MAAM,SAAZ,oBAEF,0BAAMD,MAAM,SACV,0BAAMC,MAAM,SACTV,KAAKzD,MAAMH,2BAKlB,yBAAKqE,MAAM,OACT,yBAAKA,MAAM,mBACT,yBAAKA,MAAM,QACT,yBACEA,MAAM,sBACNF,MAAO,CAAES,OAAQ,OAAQC,MAAO,SAEhC,yBAAKC,IAAKO,IAASL,IAAI,WAG3B,8BACA,yBAAKX,MAAM,QAAQE,MAAM,SACvB,4CAEF,yBAAKF,MAAM,SACT,0BAAMA,MAAM,OAC0B,GAAnCT,KAAKzD,MAAM0B,qBACR,QADH,WAEO+B,KAAKzD,MAAM0B,uBAErB,0BAAMwC,MAAM,eAC0B,GAAnCT,KAAKzD,MAAM0B,qBACR,OADH,UAKL,yBAAKwC,MAAM,iBAAiBE,MAAM,SAChC,yBACEF,MAAM,mCACNY,QAAUlC,GAAMa,KAAKR,kBAAkBL,IAEvC,yBAAKsB,MAAM,WACT,0BACEC,MACqC,GAAnCV,KAAKzD,MAAMe,qBACP,QACA,QAJR,YASA,yBAAKmD,MAAM,eAIjB,yBAAKA,MAAM,gBAAgBE,MAAM,SAC/B,0BAAMF,MAAM,SAAZ,cACA,0BAAMA,MAAM,SACTT,KAAKzD,MAAMe,qBADd,gBAMN,8BAGF,yBACEmD,MAAM,cACNF,MAAO,CACLK,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGlB,yBAAKL,MAAM,sBAAsBF,MAAO,CAAEU,MAAO,QAC/C,2BACER,MAAM,cACNa,YAC8B,GAA5BtB,KAAKzD,MAAM4D,cACP,MACAH,KAAKzD,MAAM4D,cAEjBoB,SAAUvB,KAAKE,wBAEjB,0BAAMO,MAAM,gCAAZ,gBAGA,yBACEA,MAAM,4BACNY,QAAUlC,GAAMa,KAAKE,sBAAsBf,IAF7C,UAUN,yBAAKsB,MAAM,gBACT,yBACEA,MAAM,qCACNE,MAAM,SACNJ,MAAO,CAAES,OAAQ,QAEjB,yBAAKP,MAAM,OACT,yBACEA,MAAM,mCACNY,QAAUlC,GACRa,KAAKhB,iBAAiBgB,KAAKzD,MAAM4D,gBAGnC,yBAAKM,MAAM,UAAUE,MAAM,UACzB,0BAAMD,MAAM,SAAZ,WACA,yBAAKD,MAAM,kBASvB,0BAAMM,KAAK,OAAOT,UAAU,aAC1B,yBAAKG,MAAM,UAAUE,MAAM,QACzB,0BAAMF,MAAM,SACV,0BAAMC,MAAM,SAAZ,oBAEF,0BAAMD,MAAM,SACV,0BAAMC,MAAM,SACTV,KAAKzD,MAAMH,2BAKlB,yBAAKqE,MAAM,OACT,yBAAKA,MAAM,mBACT,yBAAKA,MAAM,QACT,yBACEA,MAAM,sBACNF,MAAO,CAAES,OAAQ,OAAQC,MAAO,SAEhC,yBAAKC,IAAKQ,IAAQN,IAAI,WAG1B,8BACA,yBAAKX,MAAM,QAAQE,MAAM,SACvB,2CAEF,yBAAKF,MAAM,SACT,0BAAMA,MAAM,OAC0B,GAAnCT,KAAKzD,MAAM0B,qBACR,QADH,WAEO+B,KAAKzD,MAAM0B,uBAErB,0BAAMwC,MAAM,eAC0B,GAAnCT,KAAKzD,MAAM0B,qBAA4B,OAAvC,UAGL,yBAAKwC,MAAM,iBAAiBE,MAAM,SAChC,yBACEF,MAAM,mCACNY,QAAUlC,GAAMa,KAAKR,kBAAkBL,IAEvC,yBAAKsB,MAAM,WACT,0BACEC,MACqC,GAAnCV,KAAKzD,MAAMe,qBACP,QACA,QAJR,YASA,yBAAKmD,MAAM,eAIjB,yBAAKA,MAAM,gBAAgBE,MAAM,SAC/B,0BAAMF,MAAM,SAAZ,cACA,0BAAMA,MAAM,SACTT,KAAKzD,MAAMe,qBADd,eAMN,8BAGF,yBACEmD,MAAM,cACNF,MAAO,CACLK,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGlB,yBAAKL,MAAM,sBAAsBF,MAAO,CAAEU,MAAO,QAC/C,2BACER,MAAM,cACNa,YAC8B,GAA5BtB,KAAKzD,MAAM4D,cACP,MACAH,KAAKzD,MAAM4D,cAEjBoB,SAAUvB,KAAKE,wBAEjB,0BAAMO,MAAM,gCAAZ,eACA,yBACEA,MAAM,4BACNY,QAAUlC,GAAMa,KAAKE,sBAAsBf,IAF7C,SASJ,yBAAKsB,MAAM,gBACT,yBACEA,MAAM,qCACNE,MAAM,SACNJ,MAAO,CAAES,OAAQ,QAEjB,yBAAKP,MAAM,OACT,yBACEA,MAAM,mCACNY,QAAUlC,GACRa,KAAKhB,iBAAiBgB,KAAKzD,MAAM4D,gBAGnC,yBAAKM,MAAM,UAAUE,MAAM,UACzB,0BAAMD,MAAM,SAAZ,WACA,yBAAKD,MAAM,iBASrB,0BAAMM,KAAK,OAAOT,UAAU,aAC1B,yBAAKG,MAAM,UAAUE,MAAM,QACzB,0BAAMF,MAAM,SACV,0BAAMC,MAAM,SAAZ,oBAEF,0BAAMD,MAAM,SACV,0BAAMC,MAAM,SACTV,KAAKzD,MAAMH,2BAKlB,yBAAKqE,MAAM,OACT,yBAAKA,MAAM,mBACT,yBAAKA,MAAM,QACT,yBACEA,MAAM,sBACNF,MAAO,CAAES,OAAQ,OAAQC,MAAO,SAEhC,yBAAKC,IAAKS,IAASP,IAAI,WAG3B,8BACA,yBAAKX,MAAM,QAAQE,MAAM,SACvB,4CAEF,yBAAKF,MAAM,SACT,0BAAMA,MAAM,OAC0B,GAAnCT,KAAKzD,MAAM0B,qBACR,QADH,WAEO+B,KAAKzD,MAAM0B,uBAErB,0BAAMwC,MAAM,eAC0B,GAAnCT,KAAKzD,MAAM0B,qBAA4B,OAAvC,UAGL,yBAAKwC,MAAM,iBAAiBE,MAAM,SAChC,yBACEF,MAAM,mCACNY,QAAUlC,GAAMa,KAAKR,kBAAkBL,IAEvC,yBAAKsB,MAAM,WACT,0BACEC,MACqC,GAAnCV,KAAKzD,MAAMe,qBACP,QACA,QAJR,YASA,yBAAKmD,MAAM,eAIjB,yBAAKA,MAAM,gBAAgBE,MAAM,SAC/B,0BAAMF,MAAM,SAAZ,cACA,0BAAMA,MAAM,SACTT,KAAKzD,MAAMe,qBADd,gBAMN,8BAGF,yBACEmD,MAAM,cACNF,MAAO,CACLK,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGlB,yBAAKL,MAAM,sBAAsBF,MAAO,CAAEU,MAAO,QAC/C,2BACER,MAAM,cACNa,YAC8B,GAA5BtB,KAAKzD,MAAM4D,cACP,MACAH,KAAKzD,MAAM4D,cAEjBoB,SAAUvB,KAAKE,wBAEjB,0BAAMO,MAAM,gCAAZ,gBACA,yBACEA,MAAM,4BACNY,QAAUlC,GAAMa,KAAKE,sBAAsBf,IAF7C,SASJ,yBAAKsB,MAAM,gBACT,yBACEA,MAAM,qCACNE,MAAM,SACNJ,MAAO,CAAES,OAAQ,QAEjB,yBAAKP,MAAM,OACT,yBACEA,MAAM,mCACNY,QAAUlC,GACRa,KAAKhB,iBAAiBgB,KAAKzD,MAAM4D,gBAGnC,yBAAKM,MAAM,UAAUE,MAAM,UACzB,0BAAMD,MAAM,SAAZ,WACA,yBAAKD,MAAM,iBAOrB,6BAEA,6BAEA,iCAQGlH,Q,4DCrkCQ,IAAIqI,KAAK,KAAM,EAAG,GAAI,EAAG,GAAI,EAAG,GAHvD,MAKMC,EAAe,IAAID,KAAK,KAAM,EAAG,GAAI,EAAG,EAAG,EAAG,GAOpD,IAAIE,EAAMD,EADA,IAAID,KAEVG,EAAUC,KAAKC,MAAMH,EAbV,OAcfvH,QAAQC,IAAIuH,GACZxH,QAAQC,IAAIuH,GACZxH,QAAQC,IAAIsH,GACZvH,QAAQC,IAAIsH,GACZvH,QAAQC,IAAIsH,GACZvH,QAAQC,IAAIsH,GAEZ,IAAII,GAAgB,EAChBJ,EAAM,IACRI,GAAgB,GAelB,MAAMC,UAAgB3I,YACdC,qBAAsB,IAAD,kIACnB,EAAKC,mBAAmB,EAAKC,MAAMC,UADhB,uBAEnB,EAAKwI,aAFc,OAKzB,EAAKrH,SAAS,IALW,6CAQrBrB,mBAAmBE,GAAW,IAAD,6IACjCC,OAAOC,SAASuI,GAAG,mBAAmB,SAAU3H,GAC9Cb,OAAOiF,SAASC,YAEa,qBAApBlF,OAAOC,SAJe,wBAKzBC,EAAO,IAAIC,IAAKH,OAAOC,UALE,SAMXC,EAAKE,IAAIC,IAAIC,QANF,cAMzBC,EANyB,OAOzBkI,EAAU,IAAIvI,EAAKE,IAAIoB,SAC3BkH,EAAgBhH,IAChBgH,EAAgB/G,SAASpB,GAAOqB,SATH,SAWT1B,EAAKE,IAAII,iBAXA,cAWzBC,EAXyB,OAY/BC,QAAQC,IAAIJ,GACZG,QAAQC,IAAR,iBAAsBF,IAbS,UAgBRP,EAAKE,IAAIQ,cAhBD,WAmBJ,qBAHrBC,EAhByB,QAmBX,GAnBW,kCAoBPX,EAAKE,IAAIY,WAAWH,EAAS,IApBtB,QAoBvBI,EApBuB,OAqB7B,EAAKC,SAAS,CACZC,QAASN,EAAS,GAClBI,QAASf,EAAKkB,MAAMC,QAAQJ,GAG5Bf,KAAMA,EACNK,MAAOA,IA3BoB,wBA8B7BP,OAAOsB,MAAM,8BA9BgB,mCAmCLmH,EAAQ1G,QAC7B4G,SAAS,EAAKjG,MAAMvB,SACpBc,OArC0B,QAsC7B2G,EAHMA,EAnCuB,OAuCvBrH,EAAe,IAAIrB,EAAKE,IAAIoB,SAChCC,EAAMC,IACND,EAAME,SAASpB,GAAOqB,SAElBgB,EAAcnB,EAAME,SAASpB,GAAOqB,QACpCY,EAAa,IAAItC,EAAKE,IAAIoB,SAC9BiB,EAAWf,IACXe,EAAWd,SAASpB,GAAOqB,SAE7B,EAAKV,SAAS,CACZ0H,UAAWA,EACX5E,KAAMzC,EACNqB,YAAaA,EACbJ,WAAYA,IApDe,mDAuD7B9B,QAAQC,IAAI,QAAZ,MACAX,OAAOsB,MAAM,iDAxDgB,gCA2D/BtB,OAAOsB,MAAM,2BA3DkB,6DA+D7BiH,aAAc,IAAD,2IACXE,EAAU,IAAI,EAAK/F,MAAMxC,KAAKE,IAAIoB,SACtCkH,EAAgBhH,IAChBgH,EAAgB/G,SAAS,EAAKe,MAAMnC,OAAOqB,SAH5B,SAME6G,EAAQ1G,QAAQ8G,gBAAgB5G,OANlC,OAMX6G,EANW,OAQL,GACRC,EAAS,EACTC,EAAa,EACbC,EAAc,EACdC,EAAM,EACM,EAbC,UAgBNpI,EAAQ,EAhBF,aAgBKA,EAAQgI,GAhBb,kCAiBaL,EAAQ1G,QAAQoH,QAAQrI,GAAOmB,OAjB5C,gBAkBM,EAAKS,MAAMvB,SAC5B4H,IAEFC,IArBa,QAgBmBlI,IAhBnB,+BAuBfJ,QAAQC,IAAImI,GACZpI,QAAQC,IAAIqI,GAxBG,UAyBH,EAAKtG,MAAMxC,KAAKE,IAAIY,WAAWyH,EAAQW,QAAQxH,SAzB5C,eAyBfsH,EAzBe,iBA0BH,EAAKxG,MAAMxC,KAAKkB,MAAMC,QAAQ6H,GA1B3B,QA0BfA,EA1Be,OA2BfxI,QAAQC,IAAIoI,GACZE,EAAeF,GAAkB,GAARD,EAAY,EAAIA,GAAS,IAClDpI,QAAQC,IAAIsI,GACZA,EAAcd,KAAKC,MAAoB,IAAda,GAAqB,IA9B/B,mDAgCfvI,QAAQC,IAAI,iBACZD,QAAQC,IAAI,KAAE0I,YAjCC,QAmCjB,EAAKnI,SAAS,CACZoI,SAAUP,EACVQ,qBAAsBN,EACtBO,oBAAqBR,EACrBS,MAAoB,GAAbT,IAvCQ,6DA2CbU,eAAgB,IAAD,iIACa,GAA5B,EAAKhH,MAAM2F,cADI,iCAEA,EAAK3F,MAAMxC,KAAKE,IAAIC,IAAIC,QAFxB,cAEXqJ,EAFW,OAGXlB,EAAU,IAAI,EAAK/F,MAAMxC,KAAKE,IAAIoB,SACtCkH,EAAgBhH,IAChBgH,EAAgB/G,SAASgI,GAAI/H,SAGzBgI,EAAe,IAAI,EAAKlH,MAAMxC,KAAKkB,MAAMmD,GAAG,sBAC5CD,EAAM,IAAI,EAAK5B,MAAMxC,KAAKkB,MAAMmD,GAAG,SACxB,IAAI,EAAK7B,MAAMxC,KAAKkB,MAAMmD,GAAG,KAV7B,mBAYTkE,EAAQ1G,QAAQ8H,MAAM9E,KAAK,CAC/BC,KAAM,EAAKtC,MAAMvB,QACjB+E,MAAO0D,EACPtF,IAAKA,IAfQ,QAiBf5D,QAAQC,IAAI,sBACZX,OAAOiF,SAASC,SAlBD,kDAoBfxE,QAAQC,IAAI,KAAM0I,YApBH,4DAyBfS,oBAAqB,IAAD,yIAIpB7B,EAAM,GAJc,gBAKtB8B,EAAmB,KALG,uCAOL,EAAKrH,MAAMxC,KAAKE,IAAIC,IAAIC,QAPnB,cAOhBqJ,EAPgB,OAQhBlB,EAAU,IAAI,EAAK/F,MAAMxC,KAAKE,IAAIoB,SACtCkH,EAAgBhH,IAChBgH,EAAgB/G,SAASgI,GAAI/H,SAVT,mBAcG6G,EAAQ1G,QAC5B4G,SAAS,EAAKjG,MAAMvB,SACpBc,OAhBiB,WAcd+H,EAdc,OAiBpBtJ,QAAQC,IAAIqJ,GACI,GAAZA,EAlBgB,wBAmBZ1F,EAAM,IAAI,EAAK5B,MAAMxC,KAAKkB,MAAMmD,GAAG,WACnCC,EAAW,IAAI,EAAK9B,MAAMxC,KAAKkB,MAAMmD,GAAG,UAExC3B,EAAc,EAAKF,MAAME,YAC/BlC,QAAQC,IAAIiC,GAvBM,UAwBe,EAAKF,MAAMsB,KAAKjC,QAC9CC,UAAU,EAAKU,MAAMvB,SACrBc,OA1Be,sBA2BN,IAAI,EAAKS,MAAMxC,KAAKkB,MAAMmD,GAAG,wBA3BvB,UA4BO,EAAK7B,MAAMF,WAAWT,QAC5Ce,gBACAb,OA9Be,sBA+BlB,EAAKf,SAAS,CAAE6I,kBAAkB,IA/BhB,UAuCZtB,EAAQ1G,QAAQyD,WAAWT,KAAK,CACpCC,KAAM,EAAKtC,MAAMvB,QACjBmD,IAAKA,EACLE,SAAUA,IA1CM,eA4ClBxE,OAAOiF,SAASC,SA5CE,UA6CZ,EAAKqD,aA7CO,QA+CpBwB,GAAmB,EAEnBrJ,QAAQC,IAAIqJ,GAjDQ,kDAmDpBtJ,QAAQC,IAAI,KAAM0I,YAClB,EAAKnI,SAAS,CAAE6I,kBAAkB,IApDd,QAwDxB,EAAK7I,SAAS,CAAE6I,iBAAkBA,IAxDV,4DA2D1BnE,YAAY9F,GACV+F,MAAM/F,GACNqG,KAAKzD,MAAQ,CAIXqH,iBAAkB,KAClB5I,QAAS,GACTjB,KAAM,aA+BVsG,SACE,OACE,yBAAKI,MAAM,OAAOF,MAAO,CAAEC,WAAY,UAAvC,SAEE,yBAAKC,MAAM,cACT,yBAAKA,MAAM,WACT,yBAAKA,MAAM,kBACT,yBAAKA,MAAM,eACT,6BACA,6BACA,6BACA,6BACA,0BAAMA,MAAM,SAAZ,yBACA,0BAAMA,MAAM,aACV,0BAAMC,MAAM,SAAZ,4MAOF,6BACA,6BACE,0BAAMD,MAAM,QAAQE,MAAM,SACxB,0BAAMD,MAAM,SACV,2BACE,kEAShB,yBAAKD,MAAM,gBACT,yBAAKA,MAAM,YACT,yBAAKA,MAAM,oBACT,yBAAKA,MAAM,sBACT,yBAAKA,MAAM,sBACT,0BAAMC,MAAM,UAAZ,aAEF,yBAAKD,MAAM,aAAX,WAGF,yBAAKA,MAAM,SACT,yBAAKS,IAAK4C,IAAK9C,OAAO,MAAMC,MAAM,QAAQG,IAAI,UAC9C,6BAEA,yBACEX,MAAM,qBACNF,MAAO,CACLK,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGlB,0BAAMJ,MAAM,SAASC,MAAM,UACzB,6BACA,0CAEE,8BAEF,0BAAMoD,KAAK,KAAX,aAKN,0BAAMtD,MAAM,iBAAZ,UACU,IACR,0BAAMC,MAAM,SAASqD,KAAK,KAA1B,QAUF,yBAAKtD,MAAM,eACX,yBAAKA,MAAM,sBACT,yBAAKA,MAAM,aAAX,mBACA,yBAAKA,MAAM,aACT,2BACE,0BAAMC,MAAM,UAAUV,KAAKzD,MAAM+G,MAAjC,MACG,IACL,0BAAMS,KAAK,KAAX,SAGJ,yBAAKtD,MAAM,eAAeY,QAAUlC,GAAMa,KAAKuD,aAAapE,IAC1D,yBAAKsB,MAAM,6BACT,0BAAMC,MAAM,UAAZ,iBAIN,0BAAMD,MAAM,2BAA2BF,MAAO,CAAEU,MAAO,SACrD,kBAAC,IAAD,CACE+C,QACEhE,KAAKzD,MAAM8G,oBAAsB,MAAU,EACvC,MACArD,KAAKzD,MAAM8G,oBAAsB,KAEvCY,YAAY,IACZC,YAAY,UACZC,WAAW,UAEb,yBAAK1D,MAAM,uBACX,yBAAKA,MAAM,qBACT,yBAAKA,MAAM,OACT,yBAAKA,MAAM,6BACT,yBAAKA,MAAM,QACT,yBACEA,MAAM,sBACNF,MAAO,CAAES,OAAQ,OAAQC,MAAO,SAEhC,yBAAKC,IAAKkD,IAAUhD,IAAI,WAG5B,8BACA,yBAAKX,MAAM,QAAQE,MAAM,SACvB,8BACE,0BAAMD,MAAM,UAAZ,KACA,0BAAMA,MAAM,SAAZ,WAGJ,yBAAKD,MAAM,QACT,yBAAKA,MAAM,iBAAiBE,MAAM,SAChC,yBAAKF,MAAM,SAAX,MACK,0BAAMC,MAAM,UAAZ,KADL,SAGA,yBAAKD,MAAM,QAAQE,MAAM,SACvB,0BAAMF,MAAM,OACV,0BAAMC,MAAM,UACV,2BAAIV,KAAKzD,MAAM4G,cAKvB,yBAAK1C,MAAM,iBAAiBE,MAAM,SAChC,yBAAKF,MAAM,SAAX,MACK,0BAAMC,MAAM,UAAZ,KADL,eAGA,yBAAKD,MAAM,QAAQE,MAAM,SACvB,0BAAMF,MAAM,OACV,0BAAMC,MAAM,UACV,2BAAIV,KAAKzD,MAAM6G,sBADjB,YAUd,8BACA,0BAAM3C,MAAM,iBACTsB,GAAW,EACV,6BACE,0BAAMtB,MAAM,iBACV,0BAAMC,MAAM,UAAZ,2CAIF,6BACA,0BACED,MAAM,gBACNF,MAAO,CACLK,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGlB,0BAAMiD,KAAK,MAAX,IACG,0BAAMrD,MAAM,UAAZ,KADH,iBAC+C,IAC7C,0BAAMA,MAAM,UAAZ,KAFF,WAOJ,0BAAMD,MAAM,iBAAZ,2BAC2B,IACzB,kBAAC,IAAD,CAAW4D,KAAMzC,KAAK0C,MAAQxC,MAIpC,yBAAKrB,MAAM,eACX,yBAAKA,MAAM,sBACT,yBAAKA,MAAM,aAAX,IAEE,0BAAMC,MAAM,UACV,iCAHJ,YAOA,yBAAKD,MAAM,aACT,2BACE,0BAAMC,MAAM,SAASqD,KAAK,MACvB/D,KAAKzD,MAAM+G,MAAO,MAElB,IACL,0BAAMS,KAAK,KAAX,QACK,KAGT,yBACEtD,MAAM,8CACNF,MAAO,CAAEgE,OAAQ,QACjBlD,QAAUlC,GAAMa,KAAK2D,kBAAkBxE,IAEvC,6BACA,yBACEsB,MAAM,6CACNY,QAAUlC,GAAMa,KAAK2D,kBAAkBxE,GACvCoB,MAAO,CAAEgE,OAAQ,SAEjB,yBACE9D,MAAM,cACNF,MAAO,CACLK,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGlB,yBACEL,MAAM,4BACNY,QAAUlC,GAAMa,KAAK2D,kBAAkBxE,IAFzC,mBASN,6BACkC,GAA/Ba,KAAKzD,MAAMqH,iBACV,6DACiC,GAA/B5D,KAAKzD,MAAMqH,iBACb,6EAEA,iGASV,6BA4EA,6BACA,yBAAKnD,MAAM,gBACT,yBACEA,MAAM,WACNF,MAAO,CACLK,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGlB,yBAAKL,MAAM,mBACT,yBAAKS,IAAKsD,IAAUpD,IAAI,YACxB,0BAAMV,MAAM,QACV,mDAEF,0BAAMA,MAAM,QACV,2DAAuC,QAK/C,+BAMOyB,Q,kBChmBf,MAAMsC,UAAcjL,YACZC,qBAAsB,IAAD,kIACnB,EAAKC,mBAAmB,EAAKC,MAAMC,UADhB,OAIzB,EAAKmB,SAAS,IAJW,6CAOrBrB,mBAAmBE,GAAW,IAAD,mIACF,qBAApBC,OAAOC,SADe,wBAEzBC,EAAO,IAAIC,IAAKH,OAAOC,UAFE,SAGXC,EAAKE,IAAIC,IAAIC,QAHF,cAGzBC,EAHyB,gBAITL,EAAKE,IAAII,iBAJA,cAIzBC,EAJyB,OAM/BC,QAAQC,IAAIJ,GACZG,QAAQC,IAAR,iBAAsBF,IAPS,UAURP,EAAKE,IAAIQ,cAVD,WAaJ,qBAHrBC,EAVyB,QAaX,GAbW,kCAcPX,EAAKE,IAAIY,WAAWH,EAAS,IAdtB,QAcvBI,EAduB,OAe7B,EAAKC,SAAS,CACZC,QAASN,EAAS,GAClBI,QAASf,EAAKkB,MAAMC,QAAQJ,GAC5Bf,KAAMA,IAlBqB,wBAqB7BF,OAAOsB,MAAM,8BArBgB,gCAuH/BtB,OAAOsB,MAAM,2BAvHkB,8CA0HnCsE,YAAY9F,GACV+F,MAAM/F,GACNqG,KAAKzD,MAAQ,CAIXqH,iBAAkB,KAClB5I,QAAS,GACTjB,KAAM,aA8BVsG,SACE,OACE,yBAAKI,MAAM,OAAOF,MAAO,CAAEC,WAAY,UACrC,yBAAKC,MAAM,cACT,yBAAKA,MAAM,WACT,yBAAKA,MAAM,kBACT,yBAAKA,MAAM,eACT,6BACA,6BACA,6BACA,6BACA,0BAAMA,MAAM,SAAZ,oBACA,0BAAMA,MAAM,aACV,0BAAMC,MAAM,SACV,0BAAMqD,KAAK,MACT,wEAEF,6BACA,6BALF,aAME,0BAAMrD,MAAM,SAASqD,KAAK,MAA1B,KANF,2BAUE,0BAAMrD,MAAM,SAASqD,KAAK,MAA1B,QAEQ,IAZV,0EAeE,6BAfF,8BAeoC,IAClC,0BAAMrD,MAAM,UAAZ,KAhBF,wEAiB4C,IAC1C,0BAAMA,MAAM,SAASqD,KAAK,MAA1B,MAlBF,oBAsBE,6BACA,6BAvBF,yQA+BF,6BACA,yBACExD,MAAO,CACLK,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGlB,0BAAML,MAAM,QAAQE,MAAM,UACxB,0BAAMD,MAAM,UACV,mDACwB,IACtB,0BAAMA,MAAM,SAAZ,YAFF,oEAG8C,IAC5C,0BAAMA,MAAM,SAAZ,KAJF,IAKE,0BAAMA,MAAM,SAAZ,QACA,0BAAMA,MAAM,SAAZ,OANF,IAMiC,6BANjC,eAOc,0BAAMA,MAAM,SAAZ,gBAPd,+CAaN,6BACA,6BACA,6BACE,0BAAMD,MAAM,QAAQE,MAAM,SACxB,0BAAMD,MAAM,SACV,0LAQN,6BACA,yBACEH,MAAO,CACLK,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGlB,0BAAML,MAAM,QAAQE,MAAM,UACxB,0BAAMD,MAAM,SACV,2BACE,kEAUhB,6BA6EA,6BACA,yBAAKD,MAAM,gBACT,yBACEA,MAAM,WACNF,MAAO,CACLK,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGlB,yBAAKR,UAAU,kBAAkBY,IAAKwD,QAI1C,+BAMOD,QChXf,MAAME,UAAenL,YACbC,qBAAsB,IAAD,kIACnB,EAAKC,mBAAmB,EAAKC,MAAMC,UADhB,6CAKrBF,mBAAmBE,GAAW,IAAD,mIACjCC,OAAOC,SAASuI,GAAG,mBAAmB,SAAU3H,GAC9Cb,OAAOiF,SAASC,YAEa,qBAApBlF,OAAOC,SAJe,wBAKzBC,EAAO,IAAIC,IAAKH,OAAOC,UALE,SAMXC,EAAKE,IAAIC,IAAIC,QANF,cAMzBC,EANyB,gBAOTL,EAAKE,IAAII,iBAPA,cAOzBC,EAPyB,OAS/BC,QAAQC,IAAIJ,GACZG,QAAQC,IAAR,iBAAsBF,IAVS,UAaRP,EAAKE,IAAIQ,cAbD,WAgBJ,qBAHrBC,EAbyB,QAgBX,GAhBW,kCAiBPX,EAAKE,IAAIY,WAAWH,EAAS,IAjBtB,QAiBvBI,EAjBuB,OAkB7B,EAAKC,SAAS,CACZC,QAASN,EAAS,GAClBI,QAASf,EAAKkB,MAAMC,QAAQJ,GAC5Bf,KAAMA,IArBqB,wBAwB7BF,OAAOsB,MAAM,8BAxBgB,gCAkC/BtB,OAAOsB,MAAM,2BAlCkB,8CAqCnCsE,YAAY9F,GACV+F,MAAM/F,GADW,KAanBiL,WAAa,CAACzF,EAAG0F,KACf7E,KAAKjF,SAAS,CAAE8J,KAAMA,KAZtB7E,KAAKzD,MAAQ,CAIXqH,iBAAkB,KAClB5I,QAAS,GACTjB,KAAM,YACN8K,KAAM,SAQVxE,SACE,OACE,yBACEC,UAAU,iEACVC,MAAO,CACLC,WACE,sEAGJ,uBAAGF,UAAU,sCAAsCwE,KAAK,WACtD,yBAAK5D,IAAK6D,IAAKzE,UAAU,WAAWc,IAAI,OAAOJ,OAAO,OACtD,2BACG,IADH,IAEG,0BAAMN,MAAM,UAAZ,KAFH,OAIA,yBAAKJ,UAAU,aAEjB,yBAAKA,UAAU,eACb,yBAAKA,UAAU,wBACb,uBAAGG,MAAO,kBAAmBqE,KAAK,WAChC,0BAAMpE,MAAM,UAAZ,IACG,0BAAMqD,KAAK,KAAX,MAFL,SASA,uBAAGtD,MAAM,iBAAiBqE,KAAK,aAC7B,0BAAMpE,MAAM,UAAZ,IACG,0BAAMqD,KAAK,KAAX,MAFL,SAcA,uBACEtD,MAAM,iBACNqE,KAAK,6BACLhF,OAAO,SACPkF,IAAI,uBAEJ,0BAAMtE,MAAM,UAAZ,IACG,0BAAMqD,KAAK,OAPhB,UAaJ,yBACEtD,MAAM,iBACNwE,aAAA,EACAH,KAAK,6BACLhF,OAAO,SACPkF,IAAI,uBAEJ,6BACE,yBAAKvE,MAAM,yBACT,0BAAMC,MAAM,SACV,2BACE,0BAAMA,MAAM,UAAZ,SACG,IAHP,SAKE,mCAIN,yBAAKD,MAAM,8BAEb,2BACG,IACD,yBACEA,MAAM,mDACNY,QAAUlC,GAAMa,KAAKtG,mBAAmByF,IAExC,yBAAKsB,MAAM,WACc,IAAtBT,KAAKzD,MAAMvB,QACR,iBACAgF,KAAKzD,MAAMvB,QAAQkK,OAAO,EAAG,GAC7B,MACAlF,KAAKzD,MAAMvB,QAAQkK,OAAOlF,KAAKzD,MAAMvB,QAAQJ,OAAS,MAIhE,yBAAK2F,MAAO,CAAEU,MAAO,WAMd0D,QC5Kf,MAAMQ,UAAYC,IAAM5L,UACtB6G,SACE,OACE,kBAAC,IAAD,KACE,8BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgF,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,SAASC,OAAK,GACxB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,WAAWC,OAAK,GAC1B,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAUC,GAAG,UAQVJ,QC7BKK,QACW,cAA7B3L,OAAOiF,SAAS2G,UAEe,UAA7B5L,OAAOiF,SAAS2G,UAEhB5L,OAAOiF,SAAS2G,SAASC,MACvB,2D,OCTNC,IAAStF,OACP,kBAAC,IAAMuF,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAKC,IACjCA,EAAaC,gB,mBEnInB/M,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.cb07849e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pugSusu.c1627066.png\";","module.exports = __webpack_public_path__ + \"static/media/pugEwtt.0f533c13.png\";","module.exports = __webpack_public_path__ + \"static/media/pugAmmo.c08648e6.png\";","module.exports = __webpack_public_path__ + \"static/media/pugUsdc.3400cbbe.png\";","module.exports = __webpack_public_path__ + \"static/media/pugBnb.d62aae50.png\";","module.exports = __webpack_public_path__ + \"static/media/promoAbout.e7ae8bb1.png\";","module.exports = __webpack_public_path__ + \"static/media/gangster.cc2ed9f8.png\";","module.exports = __webpack_public_path__ + \"static/media/dbank.d60e0d6a.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.9a4bb427.png\";","module.exports = __webpack_public_path__ + \"static/media/pugFather.70899a03.png\";","module.exports = __webpack_public_path__ + \"static/media/gang-ewt.2a03f9c6.png\";","import { Tabs, Tab } from \"react-bootstrap\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter, Route, Switch, Link, NavLink } from \"react-router-dom\";\n// import  Routes from './routes';\n\nimport Web3 from \"web3\";\n\nimport \"./App.css\";\n// import EwtFarm from './ewtFarm.js';\n\n//!FAKE -- delete!\nimport Ewt_Fake from \"../abis/Ewt_lp.json\";\nimport Ammo_Fake from \"../abis/Ammo_lp.json\";\n//!end : FAKE -- delete!\n\nimport MasterChef from \"../abis/MasterChef.json\";\nimport Token from \"../abis/SusuToken.json\";\n\nimport dbank from \"./assets/dbank.png\";\nimport pugSusu from \"./assets/pugSusu.png\";\nimport logo from \"./assets/logo.png\";\nimport pugFather from \"./assets/pugFather.png\";\nimport pugEwt from \"./assets/gang-ewt.png\";\nimport pugEwtt from \"./assets/pugEwtt.png\";\nimport pugAmmo from \"./assets/pugAmmo.png\";\nimport pugUsdc from \"./assets/pugUsdc.png\";\nimport pugBnb from \"./assets/pugBnb.png\";\nimport gangster from \"./assets/gangster.png\";\nimport ammo from \"./assets/ammo.png\";\n\n// const routes = (\n//   <BrowserRouter>\n//     <div>\n//       <Switch>\n//         <Route path=\"/\" component={EwtFarm}></Route>\n\n//       </Switch>\n//     </div>\n//   </BrowserRouter>\n// );\n\nclass Home extends Component {\n  async componentWillMount() {\n    await this.loadBlockchainData(this.props.dispatch);\n  }\n\n  async loadBlockchainData(dispatch) {\n    if (typeof window.ethereum !== \"undefined\") {\n      const web3 = new Web3(window.ethereum);\n      const netId = await web3.eth.net.getId();\n      const blockAc = await web3.eth.getBlockNumber();\n\n      console.log(netId);\n      console.log(`Block: ${blockAc}`);\n      // const algo = await web3.eth.Contract(dbank.abi,dbank.address);\n      // console.log(algo.toString());\n      const accounts = await web3.eth.getAccounts();\n      console.log(\"Printing All Connected Accounts\");\n      for (let index = 0; index < accounts.length; index++) {\n        console.log(accounts[index]);\n      }\n      console.log(accounts);\n      //load balance\n      if (typeof accounts[0] !== \"undefined\") {\n        const balance = await web3.eth.getBalance(accounts[0]);\n        this.setState({\n          account: accounts[0],\n          balance: web3.utils.fromWei(balance),\n          web3: web3,\n        });\n      } else {\n        window.alert(\"Please login with MetaMask\");\n      }\n\n      //load contracts\n      try {\n        //! AQUI NO CONSTA LA NETWORK DE EWC\n        //? Podria solucionarse, subiendo el contrato a la EWC (P.e. REMIX)\n\n        //* Seria igual pero el Token.abi --> subido en la red EWC (deployed smart contract)\n        // const PugInst = new web3.eth.Contract(Token.abi, PUG.address);\n        const ammoContract = new web3.eth.Contract(\n          Token.abi,\n          Token.networks[netId].address\n        );\n        //* FAKE PUG_EWT\n        const fake_ewt_contract = new web3.eth.Contract(\n          Ewt_Fake.abi,\n          Ewt_Fake.networks[netId].address\n        ); //'0x7E77Fb69EEAf4Eafa7C0d2a8DdD151Fd3161e71c');\n        const fake_ewt_clp = await fake_ewt_contract.methods\n          .balanceOf(accounts[0])\n          .call();\n        const ewt_clp_wallet_balance = web3.utils.fromWei(fake_ewt_clp);\n        //* FAKE PUG_AMMO\n        const fake_ammo_contract = new web3.eth.Contract(\n          Ammo_Fake.abi,\n          Ammo_Fake.networks[netId].address\n        ); //'0x7E77Fb69EEAf4Eafa7C0d2a8DdD151Fd3161e71c');\n        const fake_ammo_clp = await fake_ammo_contract.methods\n          .balanceOf(accounts[0])\n          .call();\n        const ammo_clp_wallet_balance = web3.utils.fromWei(fake_ammo_clp);\n\n        console.log(Token.networks[netId].address);\n        const masterChef = new web3.eth.Contract(\n          MasterChef.abi,\n          MasterChef.networks[netId].address\n        );\n        console.log(MasterChef.networks[netId].address);\n        const ammo_wallet_wei = await ammoContract.methods\n          .balanceOf(this.state.account)\n          .call();\n        const ammoAddress = Token.networks[netId].address;\n        const ammo_wallet_balance = web3.utils.fromWei(ammo_wallet_wei);\n\n        const feeAddress = await masterChef.methods.getFeeAddress().call();\n\n        let user_farm_0 = await masterChef.methods\n          .userInfo(0, this.state.account)\n          .call();\n        let user_farm_1 = await masterChef.methods\n          .userInfo(1, this.state.account)\n          .call();\n\n        let pdt_rewards_0 = await masterChef.methods\n          .pendingSushi(0, this.state.account)\n          .call();\n        let pdt_rewards_1 = await masterChef.methods\n          .pendingSushi(1, this.state.account)\n          .call();\n\n        console.log(web3.utils.fromWei(user_farm_0.amount));\n        console.log(web3.utils.fromWei(user_farm_0.rewardDebt));\n\n        const depo_clp_ewt_amount = web3.utils.fromWei(user_farm_0.amount);\n        const depo_clp_ammo_amount = web3.utils.fromWei(user_farm_1.amount);\n\n        let containReward_0 = web3.utils.fromWei(pdt_rewards_0);\n        let containRewar_1 = web3.utils.fromWei(pdt_rewards_1);\n\n        let reward_farm_0 = (+containReward_0).toFixed(2);\n        let reward_farm_1 = (+containRewar_1).toFixed(2);\n\n        console.log(\"AMMO TO HARVEST Î\");\n\n        // let ewt_lp_rewards = (+reward_farm_0).toFixed(5);\n        // console.log(ewt_lp_rewards);\n        const farmContracts = [fake_ewt_contract, fake_ammo_contract];\n        console.log();\n        console.log(reward_farm_1);\n        this.setState({\n          //! AMMO\n          ammo: ammoContract,\n          ammoAddress: ammoAddress,\n          //! MasterChef\n          masterChef: masterChef,\n          masterChefAddress: MasterChef.networks[netId].address,\n          feeAddres: feeAddress,\n          //! All_Farms\n          farmContracts: farmContracts,\n          //?Farm_0\n          reward_ewt_pdt_ammo: reward_farm_0,\n          depo_clp_ewt_amount: depo_clp_ewt_amount,\n          //?Farm_1\n          reward_ammo_pdt_ammo: reward_farm_1,\n          depo_clp_ammo_amount: depo_clp_ammo_amount,\n\n          //? User Globals\n          ewt_clp_wallet_balance: ewt_clp_wallet_balance,\n          ammo_clp_wallet_balance: ammo_clp_wallet_balance,\n          ammo_wallet_balance: ammo_wallet_balance,\n\n          //* Progra Globals\n          web3: web3,\n          netId: netId,\n        });\n      } catch (e) {\n        console.log(\"Error\", e);\n        window.alert(\"Contracts not deployed to the current network\");\n      }\n    } else {\n      window.alert(\"Please install MetaMask\");\n    }\n  }\n\n  //! DEPOSIT IN FARMS\n  async deposit_ewt_clp(amount) {\n    if (amount != 0) {\n      const user_farm_0 = await this.state.farmContracts[0].methods\n        .balanceOf(this.state.account)\n        .call();\n      const gas = new this.state.web3.utils.BN(\"1000000\");\n      const gasPrice = new this.state.web3.utils.BN(\"20000\");\n\n      console.log(\"user_farm_0\");\n      const dep_amount = this.state.web3.utils.toWei(amount);\n\n      const deposit = new this.state.web3.utils.BN(dep_amount);\n      const allow = deposit + gas * gasPrice;\n\n      console.log(allow);\n      console.log(\"depositing $FAKE-EWT$\");\n      console.log(amount);\n      const fee = new this.state.web3.utils.BN(\"5000000000000000000\");\n      console.log(`Fee: ${fee}`);\n      if (this.state.masterChef !== \"undefined\") {\n        try {\n          const feeAddress = await this.state.masterChef.methods\n            .getFeeAddress()\n            .call();\n          console.log(fee);\n\n          const allowed = await this.state.farmContracts[0].methods\n            .approve(this.state.masterChefAddress, allow)\n            .send({ from: this.state.account });\n\n          //* Fee (5 AMMO)\n          // await this.state.ammo.methods.transfer(feeAddress, fee).send({\n          //   from: this.state.account,\n          //   gas: gas,\n          //   gasPrice: gasPrice,\n          // });\n\n          await this.state.masterChef.methods.deposit(0, deposit).send({\n            from: this.state.account,\n            gas: gas,\n            gasPrice: gasPrice,\n          });\n          console.log(\"EVERYTHING WENT OKAY\");\n          window.location.reload();\n        } catch (e) {\n          console.log(\"Error, deposit: \", e);\n        }\n      }\n    } else {\n    }\n  }\n\n  async deposit_ammo_clp(amount) {\n    if (amount != 0) {\n      const user_farm_1 = await this.state.farmContracts[1].methods\n        .balanceOf(this.state.account)\n        .call();\n      const gas = new this.state.web3.utils.BN(\"1000000\");\n      const gasPrice = new this.state.web3.utils.BN(\"20000\");\n\n      console.log(\"user_farm_0\");\n      const dep_amount = this.state.web3.utils.toWei(amount);\n\n      const deposit = new this.state.web3.utils.BN(dep_amount);\n      const allow = deposit + gas * gasPrice;\n      const fee = new this.state.web3.utils.BN(\"5000000000000000000\");\n      console.log(allow);\n      console.log(\"depositing $PUG-FAKE_AMMO$\");\n      console.log(amount);\n\n      if (this.state.masterChef !== \"undefined\") {\n        try {\n          const feeAddress = await this.state.masterChef.methods\n            .getFeeAddress()\n            .call();\n          const allowed = await this.state.farmContracts[1].methods\n            .approve(this.state.masterChefAddress, allow)\n            .send({\n              from: this.state.account,\n            });\n          await this.state.ammo.methods.transfer(feeAddress, fee).send({\n            from: this.state.account,\n            gas: gas,\n            gasPrice: gasPrice,\n          });\n\n          console.log(\"AT LEAST HERE\");\n          await this.state.masterChef.methods.deposit(1, deposit).send({\n            from: this.state.account,\n            gas: gas,\n            gasPrice: gasPrice,\n          });\n          console.log(\"EVERYTHING WENT OKAY\");\n          window.location.reload();\n        } catch (e) {\n          console.log(\"Error, deposit: \", e);\n        }\n      }\n    } else {\n    }\n  }\n\n  //! END: DEPOSIT IN FARMS\n\n  //! WITHDRAW IN FARMS\n\n  async withdraw_ewt_clp(e) {\n    const user_farm_0 = await this.state.masterChef.methods\n      .userInfo(0, this.state.account)\n      .call();\n    const maxAmount = this.state.web3.utils.fromWei(user_farm_0.amount);\n    const withdraw = new this.state.web3.utils.BN(\n      this.state.web3.utils.toWei(maxAmount)\n    );\n    console.log(\"withdrawing $FAKE-EWT$\");\n    const gas = new this.state.web3.utils.BN(\"1000000\");\n    const gasPrice = new this.state.web3.utils.BN(\"200000\");\n\n    const ammoAddress = this.state.ammoAddress;\n    console.log(ammoAddress);\n    const currentAmmoBalance = await this.state.ammo.methods\n      .balanceOf(this.state.account)\n      .call();\n    const fee = new this.state.web3.utils.BN(\"5000000000000000000\");\n\n    e.preventDefault();\n    if (this.state.masterChef !== \"undefined\") {\n      try {\n        const feeAddress = await this.state.masterChef.methods\n          .getFeeAddress()\n          .call();\n\n        //* Fee\n        // await this.state.ammo.methods.transfer(feeAddress, fee).send({\n        //   from: this.state.account,\n        //   gas: gas,\n        //   gasPrice: gasPrice\n        // });\n\n        await this.state.masterChef.methods\n          .withdraw(0, withdraw)\n          .send({ from: this.state.account });\n        console.log(\n          `You have ${this.state.web3.utils.fromWei(\n            withdraw\n          )} CLPs in your wallet! A part from your previous ammount: ${this.state.web3.utils.fromWei(\n            currentAmmoBalance\n          )}`\n        );\n        window.location.reload();\n      } catch (e) {\n        console.log(\"Error, withdraw: \", e);\n      }\n    }\n  }\n\n  async withdraw_ammo_clp(e) {\n    const user_farm_1 = await this.state.masterChef.methods\n      .userInfo(1, this.state.account)\n      .call();\n    const maxAmount = this.state.web3.utils.fromWei(user_farm_1.amount);\n    const withdraw = new this.state.web3.utils.BN(\n      this.state.web3.utils.toWei(maxAmount)\n    );\n    console.log(\"withdrawing $FAKE-EWT$\");\n    const ammoAddress = this.state.ammoAddress;\n    const gas = new this.state.web3.utils.BN(\"1000000\");\n    const gasPrice = new this.state.web3.utils.BN(\"200000\");\n    console.log(\"ammoAddress\");\n    console.log(ammoAddress);\n    const fee = new this.state.web3.utils.BN(\"5000000000000000000\");\n\n    const currentAmmoBalance = await this.state.ammo.methods\n      .balanceOf(this.state.account)\n      .call();\n\n    e.preventDefault();\n    if (this.state.masterChef !== \"undefined\") {\n      try {\n        const feeAddress = await this.state.masterChef.methods\n          .getFeeAddress()\n          .call();\n        await this.state.ammo.methods.transfer(feeAddress, fee).send({\n          from: this.state.account,\n          gas: gas,\n          gasPrice: gasPrice,\n        });\n\n        await this.state.masterChef.methods\n          .withdraw(1, withdraw)\n          .send({ from: this.state.account });\n        window.location.reload();\n      } catch (e) {\n        console.log(\"Error, withdraw: \", e);\n      }\n    }\n  }\n\n  //! END: WITHDRAW IN FARMS\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      //*Globals\n      web3: \"undefined\",\n      masterChef: null,\n      netId: null,\n      feeAddress: null,\n      //?UserGlobals\n      account: \"\",\n      balance: 0,\n      //!Balances\n\n      //* PUG_EWT\n      ewt_clp_wallet_balance: 0,\n      reward_ewt_pdt_ammo: 0.0,\n      depo_clp_ewt_amount: 0,\n      input_lp_ewt: 0,\n\n      //* PUG_AMMO\n      ammo_clp_wallet_balance: 0,\n      reward_ammo_pdt_ammo: 0.0,\n      depo_clp_ammo_amount: 0,\n      input_lp_ammo: 0,\n\n      //! Contracts&Addresses\n      farmContracts: [],\n      ammo: null,\n      masterChefAddress: null,\n\n      //?* State Management\n      pair: null,\n    };\n  }\n\n  ChangeCLP_EWT_Amount = (event) => {\n    console.log(event.target.value == undefined);\n    if (event.target.value == undefined) {\n      this.setState({ input_lp_ewt: this.state.ewt_clp_wallet_balance });\n    } else {\n      this.setState({ input_lp_ewt: event.target.value });\n      //this opens in a new tab (believe that is what the owner of the question wanted if not you can do window.location.href = \"/insert/your/path/here\".\n    }\n  };\n  ChangeCLP_AMMO_Amount = (event) => {\n    //! Canviar les variables per AMMO vars\n    console.log(event.target.value);\n    if (event.target.value == undefined) {\n      this.setState({ input_lp_ammo: this.state.ammo_clp_wallet_balance });\n    } else {\n      this.setState({ input_lp_ammo: event.target.value });\n      //this opens in a new tab (believe that is what the owner of the question wanted if not you can do window.location.href = \"/insert/your/path/here\".\n    }\n  };\n\n  //*Navigation\n\n  //* END: Navigation\n\n  render() {\n    return (\n      <div className=\"root\">\n        <div className=\"text-monospace\">\n          <br></br>\n          <div className=\"page\" style={{ background: \"black\" }}>\n            <br></br>\n            <br></br>\n            <div class=\"pot-banner\">\n              <div class=\"wrapper\">\n                <div class=\"banner-wrapper\">\n                  <div class=\"txt-wrapper\">\n                    <span class=\"title\">G$WAP Farming</span>\n                    <span class=\"sub-title\">\n                      <font color=\"white\">\n                        The G$wap Farming is for those who support @mogpug\n                        ($PUG) from the begining. Gangsters take care of other\n                        Gangsters, at least Pug Gangsters do.\n                      </font>\n                    </span>\n                    <br></br>\n                    <div>\n                      <span class=\"title\" align=\"right\">\n                        <font color=\"white\">\n                          <b>\n                            <i>Eat, Fuck & Farm like a Gangster</i>\n                          </b>\n                        </font>\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <br></br>\n            <div\n              class=\"page-content\"\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <div class=\"container pg\">\n                <div class=\"farms-list-wrapper\">\n                  {/* EWT-PUG FARM */}\n                  <div class=\"balance\" align=\"left\">\n                    <span class=\"label\">\n                      <font color=\"white\">WALLET BALANCE:</font>\n                    </span>\n                    <span class=\"value\">\n                      <font color=\"white\">\n                        {this.state.ewt_clp_wallet_balance}\n                      </font>\n                    </span>\n                  </div>\n\n                  <div class=\"section staked\">\n                    <div class=\"wrapper_important_pairs\">\n                      <main role=\"main\" className=\"farm-list\">\n                        <div class=\"row\">\n                          <div class=\"farms-card-item clickable\">\n                            <div class=\"icon\">\n                              <div\n                                class=\"card-icon no-select\"\n                                style={{ height: \"90px\", width: \"90px\" }}\n                              >\n                                <img src={pugEwtt} alt=\"icon\" />\n                              </div>\n                            </div>\n                            <div></div>\n                            <div class=\"label\" align=\"right\">\n                              <span>\n                                $<font color=\"white\">PUG-EWT</font>\n                              </span>\n                            </div>\n                            <div class=\"rates\">\n                              <span class=\"apy\">\n                                {this.state.reward_ewt_pdt_ammo == 0\n                                  ? \"$AMMO\"\n                                  : `$${this.state.reward_ewt_pdt_ammo}`}\n                              </span>\n                              <span class=\"description\">\n                                {this.state.reward_ewt_pdt_ammo == 0\n                                  ? \"Earn\"\n                                  : `$AMMO`}\n                              </span>\n                            </div>\n                            <div class=\"details return\" align=\"right\">\n                              <div\n                                class=\"bunny-button clickable no-select\"\n                                onClick={(e) => this.withdraw_ewt_clp(e)}\n                              >\n                                <div class=\"content\">\n                                  <font\n                                    color={\n                                      this.state.depo_clp_ewt_amount != 0\n                                        ? \"white\"\n                                        : \"gray\"\n                                    }\n                                  >\n                                    WITHDRAW\n                                  </font>\n                                  <div class=\"subtext\"></div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"details total\" align=\"right\">\n                              <span class=\"label\">Deposited:</span>\n                              <span class=\"value\">\n                                {this.state.depo_clp_ewt_amount} EWT-PUG\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <br></br>\n                      </main>\n\n                      {/* Operating BOX */}\n                      <div\n                        class=\"token-input\"\n                        style={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                        }}\n                      >\n                        <div\n                          class=\"token-input-wrapper\"\n                          style={{ width: \"55%\" }}\n                        >\n                          <input\n                            class=\"token-input\"\n                            placeholder={\n                              this.state.input_lp_ewt == 0\n                                ? \"0.0\"\n                                : this.state.input_lp_ewt\n                            }\n                            onChange={this.ChangeCLP_EWT_Amount}\n                          />\n                          <span class=\"token-input-symbol no-select\">\n                            PUG-EWT CLP\n                          </span>\n                          <div\n                            class=\"token-input-max clickable\"\n                            onClick={(e) => this.ChangeCLP_EWT_Amount(e)}\n                          >\n                            MAX\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div\n                      class=\"farm-detail-control-action-wrapper\"\n                      style={{ height: \"5px\" }}\n                    >\n                      <div class=\"row\">\n                        <div\n                          class=\"bunny-button clickable no-select\"\n                          onClick={(e) =>\n                            this.deposit_ewt_clp(this.state.input_lp_ewt)\n                          }\n                        >\n                          <div class=\"content\">\n                            <font color=\"white\">DEPOSIT</font>\n                            <div class=\"subtext\"></div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* PUG AMMO */}\n                    <main role=\"main\" className=\"farm-list\">\n                      <div class=\"balance\" align=\"left\">\n                        <span class=\"label\">\n                          <font color=\"white\">WALLET BALANCE:</font>\n                        </span>\n                        <span class=\"value\">\n                          <font color=\"white\">\n                            {this.state.ammo_clp_wallet_balance}\n                          </font>\n                        </span>\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"farms-card-item\">\n                          <div class=\"icon\">\n                            <div\n                              class=\"card-icon no-select\"\n                              style={{ height: \"90px\", width: \"90px\" }}\n                            >\n                              <img src={pugAmmo} alt=\"icon\" />\n                            </div>\n                          </div>\n                          <div></div>\n                          <div class=\"label\" align=\"right\">\n                            <span>\n                              $<font color=\"white\">PUG-AMMO</font>\n                            </span>\n                          </div>\n                          <div class=\"rates\">\n                            <span class=\"apy\">\n                              {this.state.reward_ammo_pdt_ammo == 0\n                                ? \"$AMMO\"\n                                : `$${this.state.reward_ammo_pdt_ammo}`}\n                            </span>\n                            <span class=\"description\">\n                              {this.state.reward_ammo_pdt_ammo == 0\n                                ? \"Earn\"\n                                : `$AMMO`}\n                            </span>\n                          </div>\n                          <div class=\"details return\" align=\"right\">\n                            <div\n                              class=\"bunny-button clickable no-select\"\n                              onClick={(e) => this.withdraw_ammo_clp(e)}\n                            >\n                              <div class=\"content\">\n                                <font\n                                  color={\n                                    this.state.depo_clp_ammo_amount != 0\n                                      ? \"white\"\n                                      : \"gray\"\n                                  }\n                                >\n                                  WITHDRAW\n                                </font>\n                                <div class=\"subtext\"></div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"details total\" align=\"right\">\n                            <span class=\"label\">Deposited:</span>\n                            <span class=\"value\">\n                              {this.state.depo_clp_ammo_amount} AMMO-PUG\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                      <br></br>\n                    </main>\n                    {/* Operating BOX */}\n                    <div\n                      class=\"token-input\"\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <div class=\"token-input-wrapper\" style={{ width: \"55%\" }}>\n                        <input\n                          class=\"token-input\"\n                          placeholder={\n                            this.state.input_lp_ammo == 0\n                              ? \"0.0\"\n                              : this.state.input_lp_ammo\n                          }\n                          onChange={this.ChangeCLP_AMMO_Amount}\n                        />\n                        <span class=\"token-input-symbol no-select\">\n                          PUG-AMMO CLP\n                        </span>\n                        <div\n                          class=\"token-input-max clickable\"\n                          onClick={(e) => this.ChangeCLP_AMMO_Amount(e)}\n                        >\n                          MAX\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"card-content\">\n                    <div class=\"farm-detail-control-action-wrapper\">\n                      <div class=\"row\">\n                        <div\n                          class=\"bunny-button clickable no-select\"\n                          onClick={(e) =>\n                            this.deposit_ammo_clp(this.state.input_lp_ammo)\n                          }\n                        >\n                          <div class=\"content\">\n                            <font color=\"white\">DEPOSIT</font>\n                            <div class=\"subtext\"></div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* USDC-PUG FARM */}\n\n                <main role=\"main\" className=\"farm-list\">\n                  <div class=\"balance\" align=\"left\">\n                    <span class=\"label\">\n                      <font color=\"white\">WALLET BALANCE:</font>\n                    </span>\n                    <span class=\"value\">\n                      <font color=\"white\">\n                        {this.state.ammo_clp_wallet_balance}\n                      </font>\n                    </span>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"farms-card-item\">\n                      <div class=\"icon\">\n                        <div\n                          class=\"card-icon no-select\"\n                          style={{ height: \"90px\", width: \"90px\" }}\n                        >\n                          <img src={pugUsdc} alt=\"icon\" />\n                        </div>\n                      </div>\n                      <div></div>\n                      <div class=\"label\" align=\"right\">\n                        <span>$PUG-USDC</span>\n                      </div>\n                      <div class=\"rates\">\n                        <span class=\"apy\">\n                          {this.state.reward_ammo_pdt_ammo == 0\n                            ? \"$AMMO\"\n                            : `$${this.state.reward_ammo_pdt_ammo}`}\n                        </span>\n                        <span class=\"description\">\n                          {this.state.reward_ammo_pdt_ammo == 0\n                            ? \"Earn\"\n                            : `$AMMO`}\n                        </span>\n                      </div>\n                      <div class=\"details return\" align=\"right\">\n                        <div\n                          class=\"bunny-button clickable no-select\"\n                          onClick={(e) => this.withdraw_ammo_clp(e)}\n                        >\n                          <div class=\"content\">\n                            <font\n                              color={\n                                this.state.depo_clp_ammo_amount != 0\n                                  ? \"white\"\n                                  : \"gray\"\n                              }\n                            >\n                              WITHDRAW\n                            </font>\n                            <div class=\"subtext\"></div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"details total\" align=\"right\">\n                        <span class=\"label\">Deposited:</span>\n                        <span class=\"value\">\n                          {this.state.depo_clp_ammo_amount} USDC-PUG\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <br></br>\n                </main>\n                {/* Operating BOX */}\n                <div\n                  class=\"token-input\"\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <div class=\"token-input-wrapper\" style={{ width: \"75%\" }}>\n                    <input\n                      class=\"token-input\"\n                      placeholder={\n                        this.state.input_lp_ammo == 0\n                          ? \"0.0\"\n                          : this.state.input_lp_ammo\n                      }\n                      onChange={this.ChangeCLP_AMMO_Amount}\n                    />\n                    <span class=\"token-input-symbol no-select\">\n                      PUG-USDC CLP\n                    </span>\n                    <div\n                      class=\"token-input-max clickable\"\n                      onClick={(e) => this.ChangeCLP_AMMO_Amount(e)}\n                    >\n                      MAX\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"card-content\">\n                <div\n                  class=\"farm-detail-control-action-wrapper\"\n                  align=\"center\"\n                  style={{ height: \"5px\" }}\n                >\n                  <div class=\"row\">\n                    <div\n                      class=\"bunny-button clickable no-select\"\n                      onClick={(e) =>\n                        this.deposit_ammo_clp(this.state.input_lp_ammo)\n                      }\n                    >\n                      <div class=\"content\" align=\"center\">\n                        <font color=\"white\">DEPOSIT</font>\n                        <div class=\"subtext\"></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {/* WBNB-PUG FARM */}\n\n            <main role=\"main\" className=\"farm-list\">\n              <div class=\"balance\" align=\"left\">\n                <span class=\"label\">\n                  <font color=\"white\">WALLET BALANCE:</font>\n                </span>\n                <span class=\"value\">\n                  <font color=\"white\">\n                    {this.state.ammo_clp_wallet_balance}\n                  </font>\n                </span>\n              </div>\n\n              <div class=\"row\">\n                <div class=\"farms-card-item\">\n                  <div class=\"icon\">\n                    <div\n                      class=\"card-icon no-select\"\n                      style={{ height: \"90px\", width: \"90px\" }}\n                    >\n                      <img src={pugBnb} alt=\"icon\" />\n                    </div>\n                  </div>\n                  <div></div>\n                  <div class=\"label\" align=\"right\">\n                    <span>$PUG-BNB</span>\n                  </div>\n                  <div class=\"rates\">\n                    <span class=\"apy\">\n                      {this.state.reward_ammo_pdt_ammo == 0\n                        ? \"$AMMO\"\n                        : `$${this.state.reward_ammo_pdt_ammo}`}\n                    </span>\n                    <span class=\"description\">\n                      {this.state.reward_ammo_pdt_ammo == 0 ? \"Earn\" : `$AMMO`}\n                    </span>\n                  </div>\n                  <div class=\"details return\" align=\"right\">\n                    <div\n                      class=\"bunny-button clickable no-select\"\n                      onClick={(e) => this.withdraw_ammo_clp(e)}\n                    >\n                      <div class=\"content\">\n                        <font\n                          color={\n                            this.state.depo_clp_ammo_amount != 0\n                              ? \"white\"\n                              : \"gray\"\n                          }\n                        >\n                          WITHDRAW\n                        </font>\n                        <div class=\"subtext\"></div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"details total\" align=\"right\">\n                    <span class=\"label\">Deposited:</span>\n                    <span class=\"value\">\n                      {this.state.depo_clp_ammo_amount} BNB-PUG\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <br></br>\n            </main>\n            {/* Operating BOX */}\n            <div\n              class=\"token-input\"\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <div class=\"token-input-wrapper\" style={{ width: \"75%\" }}>\n                <input\n                  class=\"token-input\"\n                  placeholder={\n                    this.state.input_lp_ammo == 0\n                      ? \"0.0\"\n                      : this.state.input_lp_ammo\n                  }\n                  onChange={this.ChangeCLP_AMMO_Amount}\n                />\n                <span class=\"token-input-symbol no-select\">PUG-BNB CLP</span>\n                <div\n                  class=\"token-input-max clickable\"\n                  onClick={(e) => this.ChangeCLP_AMMO_Amount(e)}\n                >\n                  MAX\n                </div>\n              </div>\n            </div>\n\n            <div class=\"card-content\">\n              <div\n                class=\"farm-detail-control-action-wrapper\"\n                align=\"center\"\n                style={{ height: \"5px\" }}\n              >\n                <div class=\"row\">\n                  <div\n                    class=\"bunny-button clickable no-select\"\n                    onClick={(e) =>\n                      this.deposit_ammo_clp(this.state.input_lp_ammo)\n                    }\n                  >\n                    <div class=\"content\" align=\"center\">\n                      <font color=\"white\">DEPOSIT</font>\n                      <div class=\"subtext\"></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* WBNB-PUG FARM */}\n\n            <main role=\"main\" className=\"farm-list\">\n              <div class=\"balance\" align=\"left\">\n                <span class=\"label\">\n                  <font color=\"white\">WALLET BALANCE:</font>\n                </span>\n                <span class=\"value\">\n                  <font color=\"white\">\n                    {this.state.ammo_clp_wallet_balance}\n                  </font>\n                </span>\n              </div>\n\n              <div class=\"row\">\n                <div class=\"farms-card-item\">\n                  <div class=\"icon\">\n                    <div\n                      class=\"card-icon no-select\"\n                      style={{ height: \"90px\", width: \"90px\" }}\n                    >\n                      <img src={pugSusu} alt=\"icon\" />\n                    </div>\n                  </div>\n                  <div></div>\n                  <div class=\"label\" align=\"right\">\n                    <span>$PUG-SUSU</span>\n                  </div>\n                  <div class=\"rates\">\n                    <span class=\"apy\">\n                      {this.state.reward_ammo_pdt_ammo == 0\n                        ? \"$AMMO\"\n                        : `$${this.state.reward_ammo_pdt_ammo}`}\n                    </span>\n                    <span class=\"description\">\n                      {this.state.reward_ammo_pdt_ammo == 0 ? \"Earn\" : `$AMMO`}\n                    </span>\n                  </div>\n                  <div class=\"details return\" align=\"right\">\n                    <div\n                      class=\"bunny-button clickable no-select\"\n                      onClick={(e) => this.withdraw_ammo_clp(e)}\n                    >\n                      <div class=\"content\">\n                        <font\n                          color={\n                            this.state.depo_clp_ammo_amount != 0\n                              ? \"white\"\n                              : \"gray\"\n                          }\n                        >\n                          WITHDRAW\n                        </font>\n                        <div class=\"subtext\"></div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"details total\" align=\"right\">\n                    <span class=\"label\">Deposited:</span>\n                    <span class=\"value\">\n                      {this.state.depo_clp_ammo_amount} SUSU-PUG\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <br></br>\n            </main>\n            {/* Operating BOX */}\n            <div\n              class=\"token-input\"\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <div class=\"token-input-wrapper\" style={{ width: \"75%\" }}>\n                <input\n                  class=\"token-input\"\n                  placeholder={\n                    this.state.input_lp_ammo == 0\n                      ? \"0.0\"\n                      : this.state.input_lp_ammo\n                  }\n                  onChange={this.ChangeCLP_AMMO_Amount}\n                />\n                <span class=\"token-input-symbol no-select\">PUG-SUSU CLP</span>\n                <div\n                  class=\"token-input-max clickable\"\n                  onClick={(e) => this.ChangeCLP_AMMO_Amount(e)}\n                >\n                  MAX\n                </div>\n              </div>\n            </div>\n\n            <div class=\"card-content\">\n              <div\n                class=\"farm-detail-control-action-wrapper\"\n                align=\"center\"\n                style={{ height: \"5px\" }}\n              >\n                <div class=\"row\">\n                  <div\n                    class=\"bunny-button clickable no-select\"\n                    onClick={(e) =>\n                      this.deposit_ammo_clp(this.state.input_lp_ammo)\n                    }\n                  >\n                    <div class=\"content\" align=\"center\">\n                      <font color=\"white\">DEPOSIT</font>\n                      <div class=\"subtext\"></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <br></br>\n\n            <br></br>\n\n            <br></br>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\n\nimport { Line, Circle } from \"rc-progress\";\nimport Countdown from \"react-countdown\";\n\nimport Web3 from \"web3\";\n\nimport LotteryContract from \"../../abis/Lottery.json\";\nimport Token from \"../../abis/SusuToken.json\";\nimport MasterChef from \"../../abis/MasterChef.json\";\n\nimport gangster from \"../assets/gangster.png\";\nimport ewt from \"../assets/ewt.png\";\nimport ammo from \"../assets/ammo.png\";\nimport gngLotto from \"../assets/gngLotto.png\";\n\nconst oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n\n// const startContest_0 = new Date(2021, 6, 27);\nconst startContest_1 = new Date(2021, 6, 28, 5, 30, 0, 0);\n\nconst endContest_0 = new Date(2021, 6, 10, 0, 0, 0, 0);\n// const endContest_0 = new Date(2021, 5, 10, 0, 0, 0, 0);\n// const endContest_1 = new Date(2021, 7, 10);\n\nconst Completionist = () => <span>Time is over, let's check you gLOTTO!</span>;\n\nvar now = new Date();\nlet dif = endContest_0 - now;\nlet difDate = Math.round(dif / oneDay);\nconsole.log(difDate);\nconsole.log(difDate);\nconsole.log(dif);\nconsole.log(dif);\nconsole.log(dif);\nconsole.log(dif);\n\nlet openContest_0 = false;\nif (dif > 0) {\n  openContest_0 = true;\n}\n\nconst renderer_f_0 = ({ hours, minutes, seconds, completed }) => {\n  if (completed) {\n    // Render a completed state\n    return <Completionist />;\n  }\n  return (\n    <span>\n      {hours}:{minutes}:{seconds}\n    </span>\n  );\n};\n\nclass Lottery extends Component {\n  async componentWillMount() {\n    await this.loadBlockchainData(this.props.dispatch);\n    await this.GetLotto_0();\n    //!CARREGAR INITIAL DATA;\n\n    this.setState({});\n  }\n\n  async loadBlockchainData(dispatch) {\n    window.ethereum.on(\"accountsChanged\", function (accounts) {\n      window.location.reload();\n    });\n    if (typeof window.ethereum !== \"undefined\") {\n      const web3 = new Web3(window.ethereum);\n      const netId = await web3.eth.net.getId();\n      const lottery = new web3.eth.Contract(\n        LotteryContract.abi,\n        LotteryContract.networks[netId].address\n      );\n      const blockAc = await web3.eth.getBlockNumber();\n      console.log(netId);\n      console.log(`Block: ${blockAc}`);\n      // const algo = await web3.eth.Contract(dbank.abi,dbank.address);\n      // console.log(algo.toString());\n      const accounts = await web3.eth.getAccounts();\n\n      //load balance\n      if (typeof accounts[0] !== \"undefined\") {\n        const balance = await web3.eth.getBalance(accounts[0]);\n        this.setState({\n          account: accounts[0],\n          balance: web3.utils.fromWei(balance),\n\n          //* Progra Globals\n          web3: web3,\n          netId: netId,\n        });\n      } else {\n        window.alert(\"Please login with MetaMask\");\n      }\n\n      //load contracts\n      try {\n        const winDisp_0 = await lottery.methods\n          .winnings(this.state.account)\n          .call();\n        winDisp_0 = winDisp_0;\n        const ammoContract = new web3.eth.Contract(\n          Token.abi,\n          Token.networks[netId].address\n        );\n        const ammoAddress = Token.networks[netId].address;\n        const masterChef = new web3.eth.Contract(\n          MasterChef.abi,\n          MasterChef.networks[netId].address\n        );\n        this.setState({\n          winDisp_0: winDisp_0,\n          ammo: ammoContract,\n          ammoAddress: ammoAddress,\n          masterChef: masterChef,\n        });\n      } catch (e) {\n        console.log(\"Error\", e);\n        window.alert(\"Contracts not deployed to the current network\");\n      }\n    } else {\n      window.alert(\"Please install MetaMask\");\n    }\n  }\n\n  async GetLotto_0() {\n    const lottery = new this.state.web3.eth.Contract(\n      LotteryContract.abi,\n      LotteryContract.networks[this.state.netId].address\n    );\n\n    const leng = await lottery.methods.ticketsLength().call();\n\n    let array = [];\n    let gLotto = 0;\n    let allTickets = 0;\n    let probability = 0;\n    let pot = 0;\n    let win_pot_0 = 0;\n\n    try {\n      for (let index = 0; index < leng; index++) {\n        const participant = await lottery.methods.tickets(index).call();\n        if (participant == this.state.account) {\n          gLotto++;\n        }\n        allTickets++;\n      }\n      console.log(leng);\n      console.log(allTickets);\n      pot = await this.state.web3.eth.getBalance(lottery.options.address);\n      pot = await this.state.web3.utils.fromWei(pot);\n      console.log(gLotto);\n      probability = (gLotto / (leng == 0 ? 1 : leng)) * 100;\n      console.log(probability);\n      probability = Math.round(probability * 100) / 100;\n    } catch (e) {\n      console.log(\"console.log()\");\n      console.log(e.toString());\n    }\n    this.setState({\n      gLotto_0: gLotto,\n      gLotto_0_probability: probability,\n      gLotto_0_allTickets: allTickets,\n      pot_0: allTickets * 0.5,\n    });\n  }\n\n  async Buy_gLotto_0() {\n    if (this.state.openContest_0 != true) {\n      const id = await this.state.web3.eth.net.getId();\n      const lottery = new this.state.web3.eth.Contract(\n        LotteryContract.abi,\n        LotteryContract.networks[id].address\n      );\n\n      const buyingAmount = new this.state.web3.utils.BN(\"500000000000000000\");\n      const gas = new this.state.web3.utils.BN(\"99999\");\n      const gasPrice = new this.state.web3.utils.BN(\"1\");\n      try {\n        await lottery.methods.buy().send({\n          from: this.state.account,\n          value: buyingAmount,\n          gas: gas,\n        });\n        console.log(\"should be bought!!\");\n        window.location.reload();\n      } catch (error) {\n        console.log(error.toString());\n      }\n    }\n  }\n\n  async Withdraw_gLotto_0() {\n    let contest_0_winner;\n    //! Fer call a winner i mirar si es ell\n    //! Si es ell, probar de fer un withdraw\n    if (dif > 0) {\n      contest_0_winner = null;\n    } else {\n      const id = await this.state.web3.eth.net.getId();\n      const lottery = new this.state.web3.eth.Contract(\n        LotteryContract.abi,\n        LotteryContract.networks[id].address\n      );\n\n      try {\n        const resposta = await lottery.methods\n          .winnings(this.state.account)\n          .call();\n        console.log(resposta);\n        if (resposta != 0) {\n          const gas = new this.state.web3.utils.BN(\"6000000\");\n          const gasPrice = new this.state.web3.utils.BN(\"100000\");\n\n          const ammoAddress = this.state.ammoAddress;\n          console.log(ammoAddress);\n          const currentAmmoBalance = await this.state.ammo.methods\n            .balanceOf(this.state.account)\n            .call();\n          const fee = new this.state.web3.utils.BN(\"50000000000000000000\");\n          const feeAddress = await this.state.masterChef.methods\n            .getFeeAddress()\n            .call();\n          this.setState({ contest_0_winner: true });\n          //* Fee\n          // await this.state.ammo.methods.transfer(feeAddress, fee).send({\n          //   from: this.state.account,\n          //   gas: gas,\n          //   gasPrice: gasPrice,\n          // });\n\n          await lottery.methods.withdraw().send({\n            from: this.state.account,\n            gas: gas,\n            gasPrice: gasPrice,\n          });\n          window.location.reload();\n          await this.GetLotto_0();\n        }\n        contest_0_winner = false;\n\n        console.log(resposta);\n      } catch (error) {\n        console.log(error.toString());\n        this.setState({ contest_0_winner: false });\n      }\n    }\n\n    this.setState({ contest_0_winner: contest_0_winner });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      //? Changable DATA:\n\n      //TODO: Lottery state\n      contest_0_winner: null,\n      account: \"\",\n      web3: \"undefined\",\n\n      //TODO: End Lottery state\n      //   //*Globals\n      //   web3: \"undefined\",\n      //   masterChef: null,\n      //   netId: null,\n      //   feeAddress: null,\n      //   //?UserGlobals\n      //   account: \"\",\n      //   balance: 0,\n      //   //!Balances\n      //   //* PUG_EWT\n      //   ewt_clp_wallet_balance: 0,\n      //   reward_ewt_pdt_ammo: 0.0,\n      //   depo_clp_ewt_amount: 0,\n      //   input_lp_ewt: 0,\n      //   //* PUG_AMMO\n      //   ammo_clp_wallet_balance: 0,\n      //   reward_ammo_pdt_ammo: 0.0,\n      //   depo_clp_ammo_amount: 0,\n      //   input_lp_ammo: 0,\n      //   //! Contracts&Addresses\n      //   farmContracts: [],\n      //   ammo: null,\n      //   masterChefAddress: null,\n      //   //?* State Management\n      //   pair: null,\n    };\n  }\n\n  render() {\n    return (\n      <div class=\"page\" style={{ background: \"black\" }}>\n        NavBar\n        <div class=\"pot-banner\">\n          <div class=\"wrapper\">\n            <div class=\"banner-wrapper\">\n              <div class=\"txt-wrapper\">\n                <br></br>\n                <br></br>\n                <br></br>\n                <br></br>\n                <span class=\"title\">G$WAP Opening Jackpot</span>\n                <span class=\"sub-title\">\n                  <font color=\"white\">\n                    The G$wap Pot is the first EWC Pot platform. We aim that\n                    every Gangster in the EWC ecosystem be able to make huge\n                    profits by spending small amount. We just want to be the\n                    Gangstest $wap ever created.\n                  </font>\n                </span>\n                <br></br>\n                <div>\n                  <span class=\"title\" align=\"right\">\n                    <font color=\"white\">\n                      <b>\n                        <i>From Gangsters to Gangsters</i>\n                      </b>\n                    </font>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"container pg\">\n          <div class=\"pot-list\">\n            <div class=\"pot-item farming\">\n              <div class=\"pot-status-wrapper\">\n                <div class=\"pot-status farming\">\n                  <font color=\"ec6998\">1 Winner</font>\n                </div>\n                <div class=\"pot-token\">7 DAYS</div>\n              </div>\n\n              <div class=\"title\">\n                <img src={ewt} height=\"100\" width=\"100px\" alt=\"token\" />\n                <br></br>\n\n                <div\n                  class=\"pot-status farming\"\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <font color=\"ec6998\" align=\"center\">\n                    <br />\n                    <b>\n                      Winner's Pot\n                      <br />\n                    </b>\n                    <font size=\"1\">up to:</font>\n                  </font>\n                </div>\n              </div>\n\n              <span class=\"pot-estimated\">\n                125.000{\" \"}\n                <font color=\"ec6998\" size=\"1\">\n                  EWT\n                </font>\n              </span>\n              {/* <span class=\"pot-timestamp\">\n                <span class=\"pot-timestamp\">\n                  Countdown to Pot Open:{\" \"}\n                  <Countdown date={startContest_0} renderer={renderer_i_0} />\n                </span>\n              </span> */}\n              <div class=\"pot-divide\"></div>\n              <div class=\"pot-status-wrapper\">\n                <div class=\"pot-token\">Total Deposited</div>\n                <div class=\"pot-token\">\n                  <b>\n                    <font color=\"ec6998\">{this.state.pot_0} </font>\n                  </b>{\" \"}\n                  <font size=\"1\">EWT</font>\n                </div>\n              </div>\n              <div class=\"bunny-button\" onClick={(e) => this.Buy_gLotto_0(e)}>\n                <div class=\"token-input-max clickable\">\n                  <font color=\"ec6998\">BUY gLOTTO</font>\n                </div>\n              </div>\n            </div>\n            <span class=\"pot-item farming jackpot\" style={{ width: \"200%\" }}>\n              <Line\n                percent={\n                  this.state.gLotto_0_allTickets / 250000 <= 1\n                    ? \"0.1\"\n                    : this.state.gLotto_0_allTickets / 250000\n                }\n                strokeWidth=\"4\"\n                strokeColor=\"#ec6998\"\n                trailColor=\"black\"\n              />\n              <div class=\"pot-status-wrapper\"></div>\n              <div class=\"pot-jackpot-title\">\n                <div class=\"row\">\n                  <div class=\"farms-card-item clickable\">\n                    <div class=\"icon\">\n                      <div\n                        class=\"card-icon no-select\"\n                        style={{ height: \"90px\", width: \"90px\" }}\n                      >\n                        <img src={gangster} alt=\"icon\" />\n                      </div>\n                    </div>\n                    <div></div>\n                    <div class=\"label\" align=\"right\">\n                      <span>\n                        <font color=\"ec6998\">g</font>\n                        <font color=\"white\">LOTTO</font>\n                      </span>\n                    </div>\n                    <div class=\"algo\">\n                      <div class=\"details return\" align=\"right\">\n                        <div class=\"rates\">\n                          My <font color=\"ec6998\">g</font>LOTTO\n                        </div>\n                        <div class=\"rates\" align=\"right\">\n                          <span class=\"apy\">\n                            <font color=\"ec6998\">\n                              <b>{this.state.gLotto_0}</b>\n                            </font>\n                          </span>\n                        </div>\n                      </div>\n                      <div class=\"details return\" align=\"right\">\n                        <div class=\"rates\">\n                          My <font color=\"ec6998\">g</font>Probability\n                        </div>\n                        <div class=\"rates\" align=\"right\">\n                          <span class=\"apy\">\n                            <font color=\"ec6998\">\n                              <b>{this.state.gLotto_0_probability}</b>%\n                            </font>\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div>{/* Operating BOX */}</div>\n              <span class=\"pot-timestamp\">\n                {difDate <= 0 ? (\n                  <div>\n                    <span class=\"pot-timestamp\">\n                      <font color=\"ec6998\">\n                        Time to check if you are the Lucky One\n                      </font>\n                    </span>\n                    <br />\n                    <span\n                      class=\"pot-timestamp\"\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <font size=\"+1\">\n                        G<font color=\"ec6998\">$</font>wap wishes you{\" \"}\n                        <font color=\"ec6998\">g</font>Luck!\n                      </font>\n                    </span>\n                  </div>\n                ) : (\n                  <span class=\"pot-timestamp\">\n                    Countdown to Pot Closes:{\" \"}\n                    <Countdown date={Date.now() + dif} />\n                  </span>\n                )}\n              </span>\n              <div class=\"pot-divide\"></div>\n              <div class=\"pot-status-wrapper\">\n                <div class=\"pot-token\">\n                  G\n                  <font color=\"ec6998\">\n                    <b>$</b>\n                  </font>\n                  wap POT:\n                </div>\n                <div class=\"pot-token\">\n                  <b>\n                    <font color=\"ec6998\" size=\"+2\">\n                      {this.state.pot_0}{\" \"}\n                    </font>\n                  </b>{\" \"}\n                  <font size=\"1\">EWT</font>\n                </div>{\" \"}\n              </div>\n\n              <div\n                class=\"bunny-button default clickable deep-purple \"\n                style={{ margin: \"10px\" }}\n                onClick={(e) => this.Withdraw_gLotto_0(e)}\n              >\n                <br></br>\n                <div\n                  class=\"bunny-button default clickable select pink\"\n                  onClick={(e) => this.Withdraw_gLotto_0(e)}\n                  style={{ margin: \"10px\" }}\n                >\n                  <div\n                    class=\"token-input\"\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    <div\n                      class=\"token-input-max clickable\"\n                      onClick={(e) => this.Withdraw_gLotto_0(e)}\n                    >\n                      Try my gLUCK\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div>\n                {this.state.contest_0_winner == false ? (\n                  <i>\"Sorry, better Luck next time\"</i>\n                ) : this.state.contest_0_winner == true ? (\n                  <i>\"Good Luck, you're a gangster, BUY some $PUG\"</i>\n                ) : (\n                  <i>\n                    \"Pot is not closed yet, buy more to increase your\n                    probability\"\n                  </i>\n                )}\n              </div>\n            </span>\n          </div>\n        </div>\n        <br></br>\n        {/* <div class=\"container pg\">\n          <div class=\"pot-list\">\n            <div class=\"pot-item farming premium\">\n              <div class=\"pot-status-wrapper\">\n                <div class=\"pot-status farming premium\">\n                  <font color=\"ec6998\">1 Winner</font>\n                </div>\n                <div class=\"pot-token\">7 DAYS LOCKED</div>\n              </div>\n\n              <div class=\"title\">\n                <img src={gangster} height=\"100\" width=\"100px\" alt=\"token\" />\n\n                <div\n                  class=\"pot-jackpot premium\"\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  PUG POT\n                </div>\n              </div>\n\n              <span class=\"pot-estimated\">$74,869.82</span>\n              <span class=\"pot-timestamp\">\n                <span class=\"pot-timestamp\">\n                  Countdown to Pot Open: <Countdown date={startContest_1} />\n                </span>\n              </span>\n              <div class=\"pot-divide\"></div>\n              <div class=\"pot-status-wrapper\">\n                <div class=\"pot-token\">Total Deposit</div>\n                <div class=\"pot-token\">284,479.65 BUNNY</div>\n              </div>\n              <div class=\"bunny-button default clickable no-select deep-purple\">\n                <div class=\"content\">\n                  View more<div class=\"subtext\"></div>\n                </div>\n              </div>\n            </div>\n            <div class=\"pot-item farming jackpot\">\n              <div class=\"pot-status-wrapper\">\n                <div class=\"pot-status farming jackpot\">farming</div>\n                <div class=\"pot-token\">7 DAYS LOCKED</div>\n              </div>\n              <div class=\"pot-jackpot-title\">\n                <img src={gangster} height=\"170px\" width=\"170px\" alt=\"token\" />\n                <span class=\"pot-jackpot jackpot\">BUNNY jackpot</span>\n              </div>\n              <span class=\"pot-estimated\">$38,253.29</span>\n              <span class=\"pot-timestamp\">\n                <span class=\"pot-timestamp\">\n                  Countdown to Pot Closes: <Countdown date={endContest_1} />\n                </span>\n              </span>\n              <div class=\"pot-divide\"></div>\n              <div class=\"pot-status-wrapper\">\n                <div class=\"pot-token\">Total Deposit</div>\n                <div class=\"pot-token\">145,349.38 BUNNY</div>\n              </div>\n              <div class=\"bunny-button default clickable no-select deep-purple\">\n                <div class=\"content\">\n                  View more<div class=\"subtext\"></div>\n                </div>\n              </div>\n            </div>\n            <div class=\"pot-item empty \">\n              <img src={gngLotto} alt=\"cooking\" />\n              <span>More Coming soon</span>\n              <span>This is just the begining</span>\n            </div>\n          </div>\n        </div> */}\n        <br></br>\n        <div class=\"container pg\">\n          <div\n            class=\"pot-list\"\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <div class=\"pot-item empty \">\n              <img src={gngLotto} alt=\"cooking\" />\n              <font color=\"grey\">\n                <span>More Coming soon</span>\n              </font>\n              <font color=\"grey\">\n                <span>This is just the begining</span>{\" \"}\n              </font>\n            </div>\n          </div>\n        </div>\n        <br></br>\n      </div>\n    );\n  }\n}\n\nexport default Lottery;\n","import React, { Component } from \"react\";\n\n// import { Line, Circle } from \"rc-progress\";\n// import Countdown from \"react-countdown\";\n\nimport Web3 from \"web3\";\n\nimport gangster from \"../assets/gangster.png\";\nimport ewt from \"../assets/ewt.png\";\nimport ammo from \"../assets/ammo.png\";\nimport gngLotto from \"../assets/gngLotto.png\";\nimport promoAbout from \"../assets/promoAbout.png\";\n// import LotteryContract from \"../../abis/Lottery.json\";\n\n// import gangster from \"../assets/gangster.png\";\n// import ewt from \"../assets/ewt.png\";\n// import ammo from \"../assets/ammo.png\";\n// import gngLotto from \"../assets/gngLotto.png\";\n// import premium from \"../assets/app/premium.png\";\n\n// const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n\n// const startContest_0 = new Date(2021, 6, 29);\n// const startContest_1 = new Date(2021, 6, 29);\n\n// const endContest_0 = new Date(2021, 7, 5);\n// const endContest_1 = new Date(2021, 7, 10);\n\n// var now = Date.now();\n// let dif = Math.round((endContest_0 - now) / oneDay);\n// let openContest_0 = false;\n// if (dif > 0) {\n//   openContest_0 = true;\n// }\n\nclass About extends Component {\n  async componentWillMount() {\n    await this.loadBlockchainData(this.props.dispatch);\n    //!CARREGAR INITIAL DATA;\n\n    this.setState({});\n  }\n\n  async loadBlockchainData(dispatch) {\n    if (typeof window.ethereum !== \"undefined\") {\n      const web3 = new Web3(window.ethereum);\n      const netId = await web3.eth.net.getId();\n      const blockAc = await web3.eth.getBlockNumber();\n\n      console.log(netId);\n      console.log(`Block: ${blockAc}`);\n      // const algo = await web3.eth.Contract(dbank.abi,dbank.address);\n      // console.log(algo.toString());\n      const accounts = await web3.eth.getAccounts();\n\n      //load balance\n      if (typeof accounts[0] !== \"undefined\") {\n        const balance = await web3.eth.getBalance(accounts[0]);\n        this.setState({\n          account: accounts[0],\n          balance: web3.utils.fromWei(balance),\n          web3: web3,\n        });\n      } else {\n        window.alert(\"Please login with MetaMask\");\n      }\n\n      //load contracts\n      try {\n        //     //! AQUI NO CONSTA LA NETWORK DE EWC\n        //     //? Podria solucionarse, subiendo el contrato a la EWC (P.e. REMIX)\n        //     //* Seria igual pero el Token.abi --> subido en la red EWC (deployed smart contract)\n        //     // const PugInst = new web3.eth.Contract(Token.abi, PUG.address);\n        //     const ammoContract = new web3.eth.Contract(\n        //       Token.abi,\n        //       Token.networks[netId].address\n        //     );\n        //     //* FAKE PUG_EWT\n        //     const fake_ewt_contract = new web3.eth.Contract(\n        //       Ewt_Fake.abi,\n        //       Ewt_Fake.networks[netId].address\n        //     ); //'0x7E77Fb69EEAf4Eafa7C0d2a8DdD151Fd3161e71c');\n        //     const fake_ewt_clp = await fake_ewt_contract.methods\n        //       .balanceOf(accounts[0])\n        //       .call();\n        //     const ewt_clp_wallet_balance = web3.utils.fromWei(fake_ewt_clp);\n        //     //* FAKE PUG_AMMO\n        //     const fake_ammo_contract = new web3.eth.Contract(\n        //       Ammo_Fake.abi,\n        //       Ammo_Fake.networks[netId].address\n        //     ); //'0x7E77Fb69EEAf4Eafa7C0d2a8DdD151Fd3161e71c');\n        //     const fake_ammo_clp = await fake_ammo_contract.methods\n        //       .balanceOf(accounts[0])\n        //       .call();\n        //     const ammo_clp_wallet_balance = web3.utils.fromWei(fake_ammo_clp);\n        //     console.log(Token.networks[netId].address);\n        //     const masterChef = new web3.eth.Contract(\n        //       MasterChef.abi,\n        //       MasterChef.networks[netId].address\n        //     );\n        //     console.log(MasterChef.networks[netId].address);\n        //     const ammo_wallet_wei = await ammoContract.methods\n        //       .balanceOf(this.state.account)\n        //       .call();\n        //     const ammoAddress = Token.networks[netId].address;\n        //     const ammo_wallet_balance = web3.utils.fromWei(ammo_wallet_wei);\n        //     const feeAddress = await masterChef.methods.getFeeAddress().call();\n        //     let user_farm_0 = await masterChef.methods\n        //       .userInfo(0, this.state.account)\n        //       .call();\n        //     let user_farm_1 = await masterChef.methods\n        //       .userInfo(1, this.state.account)\n        //       .call();\n        //     let pdt_rewards_0 = await masterChef.methods\n        //       .pendingSushi(0, this.state.account)\n        //       .call();\n        //     let pdt_rewards_1 = await masterChef.methods\n        //       .pendingSushi(1, this.state.account)\n        //       .call();\n        //     console.log(web3.utils.fromWei(user_farm_0.amount));\n        //     console.log(web3.utils.fromWei(user_farm_0.rewardDebt));\n        //     const depo_clp_ewt_amount = web3.utils.fromWei(user_farm_0.amount);\n        //     const depo_clp_ammo_amount = web3.utils.fromWei(user_farm_1.amount);\n        //     let containReward_0 = web3.utils.fromWei(pdt_rewards_0);\n        //     let containRewar_1 = web3.utils.fromWei(pdt_rewards_1);\n        //     let reward_farm_0 = (+containReward_0).toFixed(2);\n        //     let reward_farm_1 = (+containRewar_1).toFixed(2);\n        //     console.log(\"AMMO TO HARVEST Î\");\n        //     // let ewt_lp_rewards = (+reward_farm_0).toFixed(5);\n        //     // console.log(ewt_lp_rewards);\n        //     const farmContracts = [fake_ewt_contract, fake_ammo_contract];\n        //     console.log();\n        //     console.log(reward_farm_1);\n        //     this.setState({\n        //       //! AMMO\n        //       ammo: ammoContract,\n        //       ammoAddress: ammoAddress,\n        //       //! MasterChef\n        //       masterChef: masterChef,\n        //       masterChefAddress: MasterChef.networks[netId].address,\n        //       feeAddres: feeAddress,\n        //       //! All_Farms\n        //       farmContracts: farmContracts,\n        //       //?Farm_0\n        //       reward_ewt_pdt_ammo: reward_farm_0,\n        //       depo_clp_ewt_amount: depo_clp_ewt_amount,\n        //       //?Farm_1\n        //       reward_ammo_pdt_ammo: reward_farm_1,\n        //       depo_clp_ammo_amount: depo_clp_ammo_amount,\n        //       //? User Globals\n        //       ewt_clp_wallet_balance: ewt_clp_wallet_balance,\n        //       ammo_clp_wallet_balance: ammo_clp_wallet_balance,\n        //       ammo_wallet_balance: ammo_wallet_balance,\n        //       //* Progra Globals\n        //       web3: web3,\n        //       netId: netId,\n        //     });\n      } catch (e) {\n        console.log(\"Error\", e);\n        window.alert(\"Contracts not deployed to the current network\");\n      }\n    } else {\n      window.alert(\"Please install MetaMask\");\n    }\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      //? Changable DATA:\n\n      //TODO: Lottery state\n      contest_0_winner: null,\n      account: \"\",\n      web3: \"undefined\",\n\n      //TODO: End Lottery state\n      //   //*Globals\n      //   web3: \"undefined\",\n      //   masterChef: null,\n      //   netId: null,\n      //   feeAddress: null,\n      //   //?UserGlobals\n      //   account: \"\",\n      //   balance: 0,\n      //   //!Balances\n      //   //* PUG_EWT\n      //   ewt_clp_wallet_balance: 0,\n      //   reward_ewt_pdt_ammo: 0.0,\n      //   depo_clp_ewt_amount: 0,\n      //   input_lp_ewt: 0,\n      //   //* PUG_AMMO\n      //   ammo_clp_wallet_balance: 0,\n      //   reward_ammo_pdt_ammo: 0.0,\n      //   depo_clp_ammo_amount: 0,\n      //   input_lp_ammo: 0,\n      //   //! Contracts&Addresses\n      //   farmContracts: [],\n      //   ammo: null,\n      //   masterChefAddress: null,\n      //   //?* State Management\n      //   pair: null,\n    };\n  }\n  render() {\n    return (\n      <div class=\"page\" style={{ background: \"black\" }}>\n        <div class=\"pot-banner\">\n          <div class=\"wrapper\">\n            <div class=\"banner-wrapper\">\n              <div class=\"txt-wrapper\">\n                <br></br>\n                <br></br>\n                <br></br>\n                <br></br>\n                <span class=\"title\">Welcome to G$wap</span>\n                <span class=\"sub-title\">\n                  <font color=\"white\">\n                    <font size=\"+2\">\n                      <b>Tired of just Holding your Gangster LPs?</b>\n                    </font>\n                    <br />\n                    <br /> Here is G\n                    <font color=\"ec6998\" size=\"+1\">\n                      $\n                    </font>\n                    wap to reward you with $\n                    <font color=\"ec6998\" size=\"+2\">\n                      AMMO\n                    </font>{\" \"}\n                    for providing liquidity to the most Gangster Pools ever\n                    created in EWC.\n                    <br /> We are launching our first{\" \"}\n                    <font color=\"ec6998\">G</font>event on 30th of June. This\n                    event contest has a prize reward of up to{\" \"}\n                    <font color=\"ec6998\" size=\"+1\">\n                      1M\n                    </font>\n                    $ or 125.000 EWT.\n                    <br />\n                    <br />\n                    This contest is not just about winning is about supporting\n                    and adding small amount of value to the project. And as we\n                    are a really gangster community what beter way that give\n                    someone of our PUG community the possibility of become a\n                    millionare with our opening.\n                  </font>\n                </span>\n                <br></br>\n                <div\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <span class=\"title\" align=\"center\">\n                    <font color=\"ec6998\">\n                      <i>\n                        Participating is just{\" \"}\n                        <font color=\"white\">0,5 EWT </font> (less than 2,75$) so\n                        the contribution is small compared with the{\" \"}\n                        <font color=\"white\">G</font>$\n                        <font color=\"white\">wap </font>\n                        <font color=\"white\">POT</font> <br />\n                        The biggest <font color=\"white\">Reward Prize</font> ever\n                        emmited in EWC, keep that in main.\n                      </i>\n                    </font>\n                  </span>\n                </div>\n                <br />\n                <br></br>\n                <div>\n                  <span class=\"title\" align=\"right\">\n                    <font color=\"white\">\n                      <i>\n                        \"There is no need to say it but as Pug Father I should\n                        just tell that every early supporter will be someway\n                        rewarded for their Loyalty to the PUG Mafia\"\n                      </i>\n                    </font>\n                  </span>\n                </div>\n                <br />\n                <div\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <span class=\"title\" align=\"center\">\n                    <font color=\"white\">\n                      <b>\n                        <i>From Gangsters to Gangsters</i>\n                      </b>\n                    </font>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <br></br>\n        {/* <div class=\"container pg\">\n          <div class=\"pot-list\">\n            <div class=\"pot-item farming premium\">\n              <div class=\"pot-status-wrapper\">\n                <div class=\"pot-status farming premium\">\n                  <font color=\"ec6998\">1 Winner</font>\n                </div>\n                <div class=\"pot-token\">7 DAYS LOCKED</div>\n              </div>\n\n              <div class=\"title\">\n                <img src={gangster} height=\"100\" width=\"100px\" alt=\"token\" />\n\n                <div\n                  class=\"pot-jackpot premium\"\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  PUG POT\n                </div>\n              </div>\n\n              <span class=\"pot-estimated\">$74,869.82</span>\n              <span class=\"pot-timestamp\">\n                <span class=\"pot-timestamp\">\n                  Countdown to Pot Open: <Countdown date={startContest_1} />\n                </span>\n              </span>\n              <div class=\"pot-divide\"></div>\n              <div class=\"pot-status-wrapper\">\n                <div class=\"pot-token\">Total Deposit</div>\n                <div class=\"pot-token\">284,479.65 BUNNY</div>\n              </div>\n              <div class=\"bunny-button default clickable no-select deep-purple\">\n                <div class=\"content\">\n                  View more<div class=\"subtext\"></div>\n                </div>\n              </div>\n            </div>\n            <div class=\"pot-item farming jackpot\">\n              <div class=\"pot-status-wrapper\">\n                <div class=\"pot-status farming jackpot\">farming</div>\n                <div class=\"pot-token\">7 DAYS LOCKED</div>\n              </div>\n              <div class=\"pot-jackpot-title\">\n                <img src={gangster} height=\"170px\" width=\"170px\" alt=\"token\" />\n                <span class=\"pot-jackpot jackpot\">BUNNY jackpot</span>\n              </div>\n              <span class=\"pot-estimated\">$38,253.29</span>\n              <span class=\"pot-timestamp\">\n                <span class=\"pot-timestamp\">\n                  Countdown to Pot Closes: <Countdown date={endContest_1} />\n                </span>\n              </span>\n              <div class=\"pot-divide\"></div>\n              <div class=\"pot-status-wrapper\">\n                <div class=\"pot-token\">Total Deposit</div>\n                <div class=\"pot-token\">145,349.38 BUNNY</div>\n              </div>\n              <div class=\"bunny-button default clickable no-select deep-purple\">\n                <div class=\"content\">\n                  View more<div class=\"subtext\"></div>\n                </div>\n              </div>\n            </div>\n            <div class=\"pot-item empty \">\n              <img src={gngLotto} alt=\"cooking\" />\n              <span>More Coming soon</span>\n              <span>This is just the begining</span>\n            </div>\n          </div>\n        </div> */}\n\n        <br></br>\n        <div class=\"container pg\">\n          <div\n            class=\"pot-list\"\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <img className=\"home-card-image\" src={promoAbout} />\n          </div>\n        </div>\n\n        <br></br>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\n\n// import { Line, Circle } from \"rc-progress\";\n// import Countdown from \"react-countdown\";\n\nimport Web3 from \"web3\";\nimport { useHistory } from \"react-router-dom\";\n\nimport pug from \"./assets/gangster.png\";\n\n// import LotteryContract from \"../../abis/Lottery.json\";\n\n// import pug from \"../assets/pug.png\";\n// import ewt from \"../assets/ewt.png\";\n// import ammo from \"../assets/ammo.png\";\n// import gngLotto from \"../assets/gngLotto.png\";\n// import premium from \"../assets/app/premium.png\";\n\n// const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n\n// const startContest_0 = new Date(2021, 6, 29);\n// const startContest_1 = new Date(2021, 6, 29);\n\n// const endContest_0 = new Date(2021, 7, 5);\n// const endContest_1 = new Date(2021, 7, 10);\n\n// var now = Date.now();\n// let dif = Math.round((endContest_0 - now) / oneDay);\n// let openContest_0 = false;\n// if (dif > 0) {\n//   openContest_0 = true;\n// }\n\nclass NavBar extends Component {\n  async componentWillMount() {\n    await this.loadBlockchainData(this.props.dispatch);\n    //!CARREGAR INITIAL DATA;\n  }\n\n  async loadBlockchainData(dispatch) {\n    window.ethereum.on(\"accountsChanged\", function (accounts) {\n      window.location.reload();\n    });\n    if (typeof window.ethereum !== \"undefined\") {\n      const web3 = new Web3(window.ethereum);\n      const netId = await web3.eth.net.getId();\n      const blockAc = await web3.eth.getBlockNumber();\n\n      console.log(netId);\n      console.log(`Block: ${blockAc}`);\n      // const algo = await web3.eth.Contract(dbank.abi,dbank.address);\n      // console.log(algo.toString());\n      const accounts = await web3.eth.getAccounts();\n\n      //load balance\n      if (typeof accounts[0] !== \"undefined\") {\n        const balance = await web3.eth.getBalance(accounts[0]);\n        this.setState({\n          account: accounts[0],\n          balance: web3.utils.fromWei(balance),\n          web3: web3,\n        });\n      } else {\n        window.alert(\"Please login with MetaMask\");\n      }\n\n      //load contracts\n      try {\n      } catch (e) {\n        console.log(\"Error\", e);\n        window.alert(\"Contracts not deployed to the current network\");\n      }\n    } else {\n      window.alert(\"Please install MetaMask\");\n    }\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      //? Changable DATA:\n\n      //TODO: Lottery state\n      contest_0_winner: null,\n      account: \"\",\n      web3: \"undefined\",\n      page: \"about\",\n    };\n  }\n\n  changePage = (e, page) => {\n    this.setState({ page: page });\n  };\n\n  render() {\n    return (\n      <nav\n        className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\"\n        style={{\n          background:\n            \"radial-gradient(100% 100% at 0px 0px, black, transparent), orange\",\n        }}\n      >\n        <a className=\"navbar-brand col-sm-2 col-md-2 mr-0\" href=\"#/about\">\n          <img src={pug} className=\"App-logo\" alt=\"logo\" height=\"65\" />\n          <b>\n            {\" \"}\n            G<font color=\"ex6998\">$</font>wap\n          </b>\n          <div className=\"content\"></div>\n        </a>\n        <div className=\"nav-wrapper\">\n          <div className=\"topbar-nav no-select\">\n            <a class={\"item clickable \"} href=\"#/farms\">\n              <font color=\"ec6998\">\n                G<font size=\"1\">$</font>\n              </font>\n              Farms\n            </a>\n            {/* <a class=\"item clickable\" href=\"/zap\">\n                Swap\n              </a> */}\n            <a class=\"item clickable\" href=\"#/lottery\">\n              <font color=\"ec6998\">\n                G<font size=\"1\">$</font>\n              </font>\n              Lotto\n            </a>\n            {/* <a\n                class=\"item clickable\"\n                href=\"https://explorer.energyweb.org/tokens/0x59b6196e41c118dfF75961257b882e86b915a0e8/token-holders\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Rank\n              </a> */}\n            <a\n              class=\"item clickable\"\n              href=\"https://twitter.com/mobpug\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <font color=\"ec6998\">\n                G<font size=\"1\"></font>\n              </font>\n              News\n            </a>\n          </div>\n        </div>\n        <div\n          class=\"account-button\"\n          no-select\n          href=\"https://twitter.com/mobpug\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <div>\n            <div class=\"bunny-price clickable\">\n              <font color=\"white\">\n                <b>\n                  <font color=\"ec6998\">PUG:</font>\n                </b>{\" \"}\n                0,0017\n                <b>$</b>\n              </font>\n            </div>\n          </div>\n          <div class=\"account-button no-select\"></div>\n        </div>\n        <a>\n          {\" \"}\n          <div\n            class=\"bunny-button primary clickable no-select no-wrap\"\n            onClick={(e) => this.loadBlockchainData(e)}\n          >\n            <div class=\"content\">\n              {this.state.account == \"\"\n                ? \"Connect Wallet\"\n                : this.state.account.substr(0, 5) +\n                  \"***\" +\n                  this.state.account.substr(this.state.account.length - 4)}\n            </div>\n          </div>\n        </a>\n        <div style={{ width: \"5px\" }}></div>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from \"react\";\n\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n  Link,\n  NavLink,\n  HashRouter,\n} from \"react-router-dom\";\n\nimport Home from \"./App\";\nimport Lottery from \"./pages/Lottery\";\nimport About from \"./pages/About\";\nimport NavBar from \"./NavBar\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <HashRouter>\n        <main>\n          <NavBar />\n          <Switch>\n            <Route path=\"/\" exact>\n              <About />\n            </Route>\n            <Route path=\"/farms\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/lottery\" exact>\n              <Lottery />\n            </Route>\n            <Redirect to=\"/\" />\n          </Switch>\n        </main>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, HashRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./components/MApp\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// ReactDOM.render(<MApp />, document.getElementById(\"root\"));\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ammo.2254aa33.png\";","module.exports = __webpack_public_path__ + \"static/media/ewt.97c55617.png\";","module.exports = __webpack_public_path__ + \"static/media/gngLotto.c8ec7766.png\";"],"sourceRoot":""}